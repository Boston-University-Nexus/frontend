{"ast":null,"code":"var _jsxFileName = \"/home/danielmelchor/Documents/CodeProjects/nexus/frontend/src/containers/ClassSearch.js\";\nimport React, { Component } from 'react';\nimport ClassCard from '../components/ClassCard';\nimport { BsFillPauseFill, BsStarFill, BsStarHalf } from 'react-icons/bs';\nimport { IoIosAddCircleOutline } from 'react-icons/io';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ClassSearch extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      classes: [],\n      // Will store the response when searching\n      recommended: [],\n      // Will store the ids of the courses added\n      query: \"\",\n      // The query to the api\n      classesHtml: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-light py-2 px-5\",\n        children: \"Start by typing a class in the search bar...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 23\n      }, this)],\n      // To display the classes\n      doneUpdating: true,\n      // To avoid multiple queries in a row\n      textTyped: \"\",\n      // Text received from the search bar\n      currentDisplayingClasses: 0,\n      // Ammount of classes currently being displayed\n      test: false,\n      maxClassesDisplay: 50,\n      // The ammount of classes to load at a time,\n      cart: new Array(5).fill([]),\n      // Classes added to schedule\n      activeSchedule: 0 // Determines which schedule is visible\n\n    };\n\n    this.checkScrollClasses = e => {\n      // Checks if a user has scrolled to the bottom and calls load more classes\n      let element = e.target;\n\n      if (element.scrollHeight - element.scrollTop < element.clientHeight + 500) {\n        this.loadMore();\n      }\n    };\n  }\n\n  loadMore() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow-xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"p-5 text-2xl border-b-2 border-gray-400 text-gray-600\",\n        children: \"Class search:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onScroll: e => this.checkScrollClasses(e),\n        children: this.state.classes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default ClassSearch;","map":{"version":3,"sources":["/home/danielmelchor/Documents/CodeProjects/nexus/frontend/src/containers/ClassSearch.js"],"names":["React","Component","ClassCard","BsFillPauseFill","BsStarFill","BsStarHalf","IoIosAddCircleOutline","ClassSearch","state","classes","recommended","query","classesHtml","doneUpdating","textTyped","currentDisplayingClasses","test","maxClassesDisplay","cart","Array","fill","activeSchedule","checkScrollClasses","e","element","target","scrollHeight","scrollTop","clientHeight","loadMore","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,SAASC,eAAT,EAA0BC,UAA1B,EAAsCC,UAAtC,QAAwD,gBAAxD;AACA,SAASC,qBAAT,QAAsC,gBAAtC;;AAEA,OAAO,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAAA;AAAA;AAAA,SACvCO,KADuC,GAC/B;AACJC,MAAAA,OAAO,EAAE,EADL;AACS;AACbC,MAAAA,WAAW,EAAE,EAFT;AAEa;AACjBC,MAAAA,KAAK,EAAE,EAHH;AAGO;AACXC,MAAAA,WAAW,EAAE,cAAC;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAD,CAJT;AAIqG;AACzGC,MAAAA,YAAY,EAAE,IALV;AAKgB;AACpBC,MAAAA,SAAS,EAAE,EANP;AAMW;AACfC,MAAAA,wBAAwB,EAAE,CAPtB;AAOyB;AAC7BC,MAAAA,IAAI,EAAE,KARF;AASJC,MAAAA,iBAAiB,EAAE,EATf;AASmB;AACvBC,MAAAA,IAAI,EAAE,IAAIC,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,EAAlB,CAVF;AAUyB;AAC7BC,MAAAA,cAAc,EAAE,CAXZ,CAWc;;AAXd,KAD+B;;AAAA,SAevCC,kBAfuC,GAejBC,CAAD,IAAO;AACxB;AACA,UAAIC,OAAO,GAAGD,CAAC,CAACE,MAAhB;;AACA,UAAID,OAAO,CAACE,YAAR,GAAuBF,OAAO,CAACG,SAA/B,GAA2CH,OAAO,CAACI,YAAR,GAAuB,GAAtE,EAA2E;AACvE,aAAKC,QAAL;AACH;AACJ,KArBsC;AAAA;;AAuBvCA,EAAAA,QAAQ,GAAG,CAAE;;AAEbC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,uDAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,QAAQ,EAAEP,CAAC,IAAI,KAAKD,kBAAL,CAAwBC,CAAxB,CAApB;AAAA,kBAAmD,KAAKf,KAAL,CAAWC;AAA9D;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAhCsC;AAmC3C,eAAeF,WAAf","sourcesContent":["import React, { Component } from 'react'\nimport ClassCard from '../components/ClassCard'\n\nimport { BsFillPauseFill, BsStarFill, BsStarHalf } from 'react-icons/bs';\nimport { IoIosAddCircleOutline } from 'react-icons/io'\n\nexport class ClassSearch extends Component {\n    state = {\n        classes: [], // Will store the response when searching\n        recommended: [], // Will store the ids of the courses added\n        query: \"\", // The query to the api\n        classesHtml: [<div className=\"font-light py-2 px-5\">Start by typing a class in the search bar...</div>], // To display the classes\n        doneUpdating: true, // To avoid multiple queries in a row\n        textTyped: \"\", // Text received from the search bar\n        currentDisplayingClasses: 0, // Ammount of classes currently being displayed\n        test: false,\n        maxClassesDisplay: 50, // The ammount of classes to load at a time,\n        cart: new Array(5).fill([]), // Classes added to schedule\n        activeSchedule: 0 // Determines which schedule is visible\n    }\n\n    checkScrollClasses = (e) => {\n        // Checks if a user has scrolled to the bottom and calls load more classes\n        let element = e.target\n        if (element.scrollHeight - element.scrollTop < element.clientHeight + 500) {   \n            this.loadMore();\n        }\n    }\n\n    loadMore() {}\n\n    render() {\n        return (\n            <div className=\"bg-white shadow-xl\">\n                <p className=\"p-5 text-2xl border-b-2 border-gray-400 text-gray-600\">Class search:</p>\n                <div onScroll={e => this.checkScrollClasses(e)} >{ this.state.classes }</div>\n            </div>\n        )\n    }\n}\n\nexport default ClassSearch\n"]},"metadata":{},"sourceType":"module"}