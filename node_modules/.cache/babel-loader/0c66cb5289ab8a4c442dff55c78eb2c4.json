{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = require(\"react\");\n\nvar registerTarget_1 = require(\"../../registerTarget\");\n\nvar useDragDropManager_1 = require(\"./useDragDropManager\");\n\nvar TargetConnector_1 = require(\"../../TargetConnector\");\n\nvar DropTargetMonitorImpl_1 = require(\"../../DropTargetMonitorImpl\");\n\nfunction useDropTargetMonitor() {\n  var manager = useDragDropManager_1.useDragDropManager();\n  var monitor = react_1.useMemo(function () {\n    return new DropTargetMonitorImpl_1.default(manager);\n  }, [manager]);\n  var connector = react_1.useMemo(function () {\n    return new TargetConnector_1.default(manager.getBackend());\n  }, [manager]);\n  return [monitor, connector];\n}\n\nexports.useDropTargetMonitor = useDropTargetMonitor;\n\nfunction useDropHandler(spec, monitor, connector) {\n  var manager = useDragDropManager_1.useDragDropManager(); // Can't use createSourceFactory, as semantics are different\n\n  var handler = react_1.useMemo(function () {\n    return {\n      canDrop: function () {\n        var canDrop = spec.current.canDrop;\n        return canDrop ? canDrop(monitor.getItem(), monitor) : true;\n      },\n      hover: function () {\n        var hover = spec.current.hover;\n\n        if (hover) {\n          hover(monitor.getItem(), monitor);\n        }\n      },\n      drop: function () {\n        var drop = spec.current.drop;\n\n        if (drop) {\n          return drop(monitor.getItem(), monitor);\n        }\n      }\n    };\n  }, [monitor]);\n  react_1.useEffect(function registerHandler() {\n    var _a = registerTarget_1.default(spec.current.accept, handler, manager),\n        handlerId = _a[0],\n        unregister = _a[1];\n\n    monitor.receiveHandlerId(handlerId);\n    connector.receiveHandlerId(handlerId);\n    return unregister;\n  }, [monitor, connector]);\n}\n\nexports.useDropHandler = useDropHandler;","map":{"version":3,"sources":["/home/danielmelchor/Documents/CodeProjects/nexus/frontend/node_modules/react-dnd/lib/cjs/hooks/internal/drop.js"],"names":["Object","defineProperty","exports","value","react_1","require","registerTarget_1","useDragDropManager_1","TargetConnector_1","DropTargetMonitorImpl_1","useDropTargetMonitor","manager","useDragDropManager","monitor","useMemo","default","connector","getBackend","useDropHandler","spec","handler","canDrop","current","getItem","hover","drop","useEffect","registerHandler","_a","accept","handlerId","unregister","receiveHandlerId"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAIC,gBAAgB,GAAGD,OAAO,CAAC,sBAAD,CAA9B;;AACA,IAAIE,oBAAoB,GAAGF,OAAO,CAAC,sBAAD,CAAlC;;AACA,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,uBAAD,CAA/B;;AACA,IAAII,uBAAuB,GAAGJ,OAAO,CAAC,6BAAD,CAArC;;AACA,SAASK,oBAAT,GAAgC;AAC5B,MAAIC,OAAO,GAAGJ,oBAAoB,CAACK,kBAArB,EAAd;AACA,MAAIC,OAAO,GAAGT,OAAO,CAACU,OAAR,CAAgB,YAAY;AAAE,WAAO,IAAIL,uBAAuB,CAACM,OAA5B,CAAoCJ,OAApC,CAAP;AAAsD,GAApF,EAAsF,CAACA,OAAD,CAAtF,CAAd;AACA,MAAIK,SAAS,GAAGZ,OAAO,CAACU,OAAR,CAAgB,YAAY;AAAE,WAAO,IAAIN,iBAAiB,CAACO,OAAtB,CAA8BJ,OAAO,CAACM,UAAR,EAA9B,CAAP;AAA6D,GAA3F,EAA6F,CACzGN,OADyG,CAA7F,CAAhB;AAGA,SAAO,CAACE,OAAD,EAAUG,SAAV,CAAP;AACH;;AACDd,OAAO,CAACQ,oBAAR,GAA+BA,oBAA/B;;AACA,SAASQ,cAAT,CAAwBC,IAAxB,EAA8BN,OAA9B,EAAuCG,SAAvC,EAAkD;AAC9C,MAAIL,OAAO,GAAGJ,oBAAoB,CAACK,kBAArB,EAAd,CAD8C,CAE9C;;AACA,MAAIQ,OAAO,GAAGhB,OAAO,CAACU,OAAR,CAAgB,YAAY;AACtC,WAAO;AACHO,MAAAA,OAAO,EAAE,YAAY;AACjB,YAAIA,OAAO,GAAGF,IAAI,CAACG,OAAL,CAAaD,OAA3B;AACA,eAAOA,OAAO,GAAGA,OAAO,CAACR,OAAO,CAACU,OAAR,EAAD,EAAoBV,OAApB,CAAV,GAAyC,IAAvD;AACH,OAJE;AAKHW,MAAAA,KAAK,EAAE,YAAY;AACf,YAAIA,KAAK,GAAGL,IAAI,CAACG,OAAL,CAAaE,KAAzB;;AACA,YAAIA,KAAJ,EAAW;AACPA,UAAAA,KAAK,CAACX,OAAO,CAACU,OAAR,EAAD,EAAoBV,OAApB,CAAL;AACH;AACJ,OAVE;AAWHY,MAAAA,IAAI,EAAE,YAAY;AACd,YAAIA,IAAI,GAAGN,IAAI,CAACG,OAAL,CAAaG,IAAxB;;AACA,YAAIA,IAAJ,EAAU;AACN,iBAAOA,IAAI,CAACZ,OAAO,CAACU,OAAR,EAAD,EAAoBV,OAApB,CAAX;AACH;AACJ;AAhBE,KAAP;AAkBH,GAnBa,EAmBX,CAACA,OAAD,CAnBW,CAAd;AAoBAT,EAAAA,OAAO,CAACsB,SAAR,CAAkB,SAASC,eAAT,GAA2B;AACzC,QAAIC,EAAE,GAAGtB,gBAAgB,CAACS,OAAjB,CAAyBI,IAAI,CAACG,OAAL,CAAaO,MAAtC,EAA8CT,OAA9C,EAAuDT,OAAvD,CAAT;AAAA,QAA0EmB,SAAS,GAAGF,EAAE,CAAC,CAAD,CAAxF;AAAA,QAA6FG,UAAU,GAAGH,EAAE,CAAC,CAAD,CAA5G;;AACAf,IAAAA,OAAO,CAACmB,gBAAR,CAAyBF,SAAzB;AACAd,IAAAA,SAAS,CAACgB,gBAAV,CAA2BF,SAA3B;AACA,WAAOC,UAAP;AACH,GALD,EAKG,CAAClB,OAAD,EAAUG,SAAV,CALH;AAMH;;AACDd,OAAO,CAACgB,cAAR,GAAyBA,cAAzB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar registerTarget_1 = require(\"../../registerTarget\");\nvar useDragDropManager_1 = require(\"./useDragDropManager\");\nvar TargetConnector_1 = require(\"../../TargetConnector\");\nvar DropTargetMonitorImpl_1 = require(\"../../DropTargetMonitorImpl\");\nfunction useDropTargetMonitor() {\n    var manager = useDragDropManager_1.useDragDropManager();\n    var monitor = react_1.useMemo(function () { return new DropTargetMonitorImpl_1.default(manager); }, [manager]);\n    var connector = react_1.useMemo(function () { return new TargetConnector_1.default(manager.getBackend()); }, [\n        manager,\n    ]);\n    return [monitor, connector];\n}\nexports.useDropTargetMonitor = useDropTargetMonitor;\nfunction useDropHandler(spec, monitor, connector) {\n    var manager = useDragDropManager_1.useDragDropManager();\n    // Can't use createSourceFactory, as semantics are different\n    var handler = react_1.useMemo(function () {\n        return {\n            canDrop: function () {\n                var canDrop = spec.current.canDrop;\n                return canDrop ? canDrop(monitor.getItem(), monitor) : true;\n            },\n            hover: function () {\n                var hover = spec.current.hover;\n                if (hover) {\n                    hover(monitor.getItem(), monitor);\n                }\n            },\n            drop: function () {\n                var drop = spec.current.drop;\n                if (drop) {\n                    return drop(monitor.getItem(), monitor);\n                }\n            },\n        };\n    }, [monitor]);\n    react_1.useEffect(function registerHandler() {\n        var _a = registerTarget_1.default(spec.current.accept, handler, manager), handlerId = _a[0], unregister = _a[1];\n        monitor.receiveHandlerId(handlerId);\n        connector.receiveHandlerId(handlerId);\n        return unregister;\n    }, [monitor, connector]);\n}\nexports.useDropHandler = useDropHandler;\n"]},"metadata":{},"sourceType":"script"}