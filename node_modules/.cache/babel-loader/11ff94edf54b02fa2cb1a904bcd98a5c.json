{"ast":null,"code":"var _jsxFileName = \"/home/danielmelchor/Documents/CodeProjects/nexus/frontend/src/pages/Planner/Calendar/StatsRating.js\";\nimport React from \"react\";\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StatsRating(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex\",\n    children: [/*#__PURE__*/_jsxDEV(CircularProgressbar, {\n      value: props.val,\n      text: props.val,\n      maxValue: 5,\n      styles: buildStyles({\n        // Rotation of path and trail, in number of turns (0-1)\n        rotation: 0.25,\n        // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n        strokeLinecap: \"butt\",\n        // Text size\n        textSize: \"16px\",\n        // How long animation takes to go from one percentage to another, in seconds\n        pathTransitionDuration: 0.5,\n        // Can specify path transition in more detail, or remove it entirely\n        // pathTransition: 'none',\n        // Colors\n        pathColor: `rgba(62, 152, 199, ${props.val / 5})`,\n        textColor: \"#f88\",\n        trailColor: \"#d6d6d6\",\n        backgroundColor: \"#3e98c7\"\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"uppercase\",\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = StatsRating;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatsRating\");","map":{"version":3,"sources":["/home/danielmelchor/Documents/CodeProjects/nexus/frontend/src/pages/Planner/Calendar/StatsRating.js"],"names":["React","CircularProgressbar","buildStyles","StatsRating","props","val","rotation","strokeLinecap","textSize","pathTransitionDuration","pathColor","textColor","trailColor","backgroundColor","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,EAA8BC,WAA9B,QAAiD,4BAAjD;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACzC,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE,QAAC,mBAAD;AACE,MAAA,KAAK,EAAEA,KAAK,CAACC,GADf;AAEE,MAAA,IAAI,EAAED,KAAK,CAACC,GAFd;AAGE,MAAA,QAAQ,EAAE,CAHZ;AAIE,MAAA,MAAM,EAAEH,WAAW,CAAC;AAClB;AACAI,QAAAA,QAAQ,EAAE,IAFQ;AAIlB;AACAC,QAAAA,aAAa,EAAE,MALG;AAOlB;AACAC,QAAAA,QAAQ,EAAE,MARQ;AAUlB;AACAC,QAAAA,sBAAsB,EAAE,GAXN;AAalB;AACA;AAEA;AACAC,QAAAA,SAAS,EAAG,sBAAqBN,KAAK,CAACC,GAAN,GAAY,CAAE,GAjB7B;AAkBlBM,QAAAA,SAAS,EAAE,MAlBO;AAmBlBC,QAAAA,UAAU,EAAE,SAnBM;AAoBlBC,QAAAA,eAAe,EAAE;AApBC,OAAD;AAJrB;AAAA;AAAA;AAAA;AAAA,YADF,eA4BE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,gBAA2BT,KAAK,CAACU;AAAjC;AAAA;AAAA;AAAA;AAAA,YA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;KAjCuBX,W","sourcesContent":["import React from \"react\";\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\n\nexport default function StatsRating(props) {\n  return (\n    <div className=\"flex\">\n      <CircularProgressbar\n        value={props.val}\n        text={props.val}\n        maxValue={5}\n        styles={buildStyles({\n          // Rotation of path and trail, in number of turns (0-1)\n          rotation: 0.25,\n\n          // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n          strokeLinecap: \"butt\",\n\n          // Text size\n          textSize: \"16px\",\n\n          // How long animation takes to go from one percentage to another, in seconds\n          pathTransitionDuration: 0.5,\n\n          // Can specify path transition in more detail, or remove it entirely\n          // pathTransition: 'none',\n\n          // Colors\n          pathColor: `rgba(62, 152, 199, ${props.val / 5})`,\n          textColor: \"#f88\",\n          trailColor: \"#d6d6d6\",\n          backgroundColor: \"#3e98c7\",\n        })}\n      />\n      <h3 className=\"uppercase\">{props.text}</h3>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}