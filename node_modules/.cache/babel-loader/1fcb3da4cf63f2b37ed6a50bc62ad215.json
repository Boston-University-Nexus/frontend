{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getThemeFromTypeName = getThemeFromTypeName;\nexports.removeTypeTheme = removeTypeTheme;\nexports.withThemeSuffix = withThemeSuffix;\nexports.alias = alias;\nexports.svgBaseProps = void 0;\n\nvar _warning = _interopRequireDefault(require(\"../_util/warning\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n} // These props make sure that the SVG behaviours like general text.\n// Reference: https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4\n\n\nvar svgBaseProps = {\n  width: '1em',\n  height: '1em',\n  fill: 'currentColor',\n  'aria-hidden': true,\n  focusable: 'false'\n};\nexports.svgBaseProps = svgBaseProps;\nvar fillTester = /-fill$/;\nvar outlineTester = /-o$/;\nvar twoToneTester = /-twotone$/;\n\nfunction getThemeFromTypeName(type) {\n  var result = null;\n\n  if (fillTester.test(type)) {\n    result = 'filled';\n  } else if (outlineTester.test(type)) {\n    result = 'outlined';\n  } else if (twoToneTester.test(type)) {\n    result = 'twoTone';\n  }\n\n  return result;\n}\n\nfunction removeTypeTheme(type) {\n  return type.replace(fillTester, '').replace(outlineTester, '').replace(twoToneTester, '');\n}\n\nfunction withThemeSuffix(type, theme) {\n  var result = type;\n\n  if (theme === 'filled') {\n    result += '-fill';\n  } else if (theme === 'outlined') {\n    result += '-o';\n  } else if (theme === 'twoTone') {\n    result += '-twotone';\n  } else {\n    (0, _warning[\"default\"])(false, 'Icon', \"This icon '\".concat(type, \"' has unknown theme '\").concat(theme, \"'\"));\n  }\n\n  return result;\n} // For alias or compatibility\n\n\nfunction alias(type) {\n  var newType = type;\n\n  switch (type) {\n    case 'cross':\n      newType = 'close';\n      break;\n    // https://github.com/ant-design/ant-design/issues/13007\n\n    case 'interation':\n      newType = 'interaction';\n      break;\n    // https://github.com/ant-design/ant-design/issues/16810\n\n    case 'canlendar':\n      newType = 'calendar';\n      break;\n    // https://github.com/ant-design/ant-design/issues/17448\n\n    case 'colum-height':\n      newType = 'column-height';\n      break;\n\n    default:\n  }\n\n  (0, _warning[\"default\"])(newType === type, 'Icon', \"Icon '\".concat(type, \"' was a typo and is now deprecated, please use '\").concat(newType, \"' instead.\"));\n  return newType;\n}","map":{"version":3,"sources":["/home/danielmelchor/Documents/CodeProjects/nexus/frontend/node_modules/antd/lib/icon/utils.js"],"names":["Object","defineProperty","exports","value","getThemeFromTypeName","removeTypeTheme","withThemeSuffix","alias","svgBaseProps","_warning","_interopRequireDefault","require","obj","__esModule","width","height","fill","focusable","fillTester","outlineTester","twoToneTester","type","result","test","replace","theme","concat","newType"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getThemeFromTypeName = getThemeFromTypeName;\nexports.removeTypeTheme = removeTypeTheme;\nexports.withThemeSuffix = withThemeSuffix;\nexports.alias = alias;\nexports.svgBaseProps = void 0;\n\nvar _warning = _interopRequireDefault(require(\"../_util/warning\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// These props make sure that the SVG behaviours like general text.\n// Reference: https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4\nvar svgBaseProps = {\n  width: '1em',\n  height: '1em',\n  fill: 'currentColor',\n  'aria-hidden': true,\n  focusable: 'false'\n};\nexports.svgBaseProps = svgBaseProps;\nvar fillTester = /-fill$/;\nvar outlineTester = /-o$/;\nvar twoToneTester = /-twotone$/;\n\nfunction getThemeFromTypeName(type) {\n  var result = null;\n\n  if (fillTester.test(type)) {\n    result = 'filled';\n  } else if (outlineTester.test(type)) {\n    result = 'outlined';\n  } else if (twoToneTester.test(type)) {\n    result = 'twoTone';\n  }\n\n  return result;\n}\n\nfunction removeTypeTheme(type) {\n  return type.replace(fillTester, '').replace(outlineTester, '').replace(twoToneTester, '');\n}\n\nfunction withThemeSuffix(type, theme) {\n  var result = type;\n\n  if (theme === 'filled') {\n    result += '-fill';\n  } else if (theme === 'outlined') {\n    result += '-o';\n  } else if (theme === 'twoTone') {\n    result += '-twotone';\n  } else {\n    (0, _warning[\"default\"])(false, 'Icon', \"This icon '\".concat(type, \"' has unknown theme '\").concat(theme, \"'\"));\n  }\n\n  return result;\n} // For alias or compatibility\n\n\nfunction alias(type) {\n  var newType = type;\n\n  switch (type) {\n    case 'cross':\n      newType = 'close';\n      break;\n    // https://github.com/ant-design/ant-design/issues/13007\n\n    case 'interation':\n      newType = 'interaction';\n      break;\n    // https://github.com/ant-design/ant-design/issues/16810\n\n    case 'canlendar':\n      newType = 'calendar';\n      break;\n    // https://github.com/ant-design/ant-design/issues/17448\n\n    case 'colum-height':\n      newType = 'column-height';\n      break;\n\n    default:\n  }\n\n  (0, _warning[\"default\"])(newType === type, 'Icon', \"Icon '\".concat(type, \"' was a typo and is now deprecated, please use '\").concat(newType, \"' instead.\"));\n  return newType;\n}"]},"metadata":{},"sourceType":"script"}