{"ast":null,"code":"var _jsxFileName = \"/home/danielmelchor/Documents/CodeProjects/nexus/frontend/src/components/test/Schedule.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Schedule extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      times: [],\n      timesHtml: [],\n      days: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"],\n      daysHtml: [],\n      classes: []\n    };\n  }\n\n  renderClasses() {\n    // Fake list of classes\n    let class1 = {\n      \"start\": \"11:00\",\n      \"end\": \"12:15\",\n      \"title\": \"CAS CS 112 A1\",\n      \"days\": \"Tue/Thu\"\n    };\n    let class2 = {\n      \"start\": \"14:00\",\n      \"end\": \"15:15\",\n      \"title\": \"CAS CS 132 A1\",\n      \"days\": \"Tue/Thu\"\n    };\n    let class3 = {\n      \"start\": \"08:00\",\n      \"end\": \"08:50\",\n      \"title\": \"CAS WR 120 A1\",\n      \"days\": \"Mon/Wed/Fri\"\n    };\n    let class4 = {\n      \"start\": \"09:05\",\n      \"end\": \"09:55\",\n      \"title\": \"CAS PH 100 A1\",\n      \"days\": \"Mon/Wed/Fri\"\n    };\n    let classes = [class1, class2, class3, class4]; // Possible colors for classes\n\n    let colors = [\"red\", \"pink\", \"purple\", \"indigo\", \"blue\"];\n    let eventsL = [[], [], [], [], []];\n    let colorCount = 0; // Height of the cells in the schedule\n\n    let cellHeight = 48;\n\n    for (const course of classes) {\n      var days = []; // Add classes to their corresponding days\n\n      if (course['days'].includes('Mon')) {\n        days.push(0);\n      }\n\n      if (course['days'].includes('Tue')) {\n        days.push(1);\n      }\n\n      if (course['days'].includes('Wed')) {\n        days.push(2);\n      }\n\n      if (course['days'].includes('Thu')) {\n        days.push(3);\n      }\n\n      if (course['days'].includes('Fri')) {\n        days.push(4);\n      } // Display classes\n\n\n      for (let i = 0; i < days.length; i++) {\n        // Conver to minutes for decimals\n        let minEnd = course['end'].slice(0, 2) * 60 + Number(course['end'].slice(3, 5));\n        let minStart = course['start'].slice(0, 2) * 60 + Number(course['start'].slice(3, 5)); // Duration in min\n\n        let duration = minEnd - minStart; // Simple calc to get what height the class should have\n\n        let height = duration * cellHeight / 60; // 18 is the max time displayed, so we move it these many cells up\n\n        let position = (18 - minStart / 60) * cellHeight - height; // HTML Saving\n\n        eventsL[days[i]].push( /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"relative w-full\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"flex bg-\" + colors[colorCount % colors.length] + \"-300 w-full absolute hover:bg-\" + colors[colorCount % colors.length] + \"-400\",\n            style: {\n              bottom: position,\n              height: height\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-center w-full block self-center\",\n              children: course['title']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this));\n      }\n\n      colorCount++;\n    }\n\n    this.setState({\n      events: eventsL\n    }, () => this.renderStructure());\n  }\n\n  generateCells() {\n    let cells = []; // Add one cell per time\n\n    for (let i = 0; i < this.state.times.length - 1; i++) {\n      cells.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"w-full border border-gray-200 block h-12 p-5 hover:bg-gray-100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 24\n      }, this));\n    }\n\n    return cells;\n  }\n\n  renderTimes() {\n    let timesToHtml = []; // Diplay the hours\n\n    for (const time of this.state.times) {\n      timesToHtml.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"text-gray-600 w-100 text-right h-12 pr-3\",\n        children: [time, \":00\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 30\n      }, this));\n    }\n\n    this.setState({\n      timesHtml: timesToHtml\n    });\n  }\n\n  renderStructure() {\n    let daysToHtml = [];\n    let dayN = 0; // Each column of the calendar (day)\n\n    for (const day of this.state.days) {\n      daysToHtml.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"inline-block text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pb-2 text-gray-600\",\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [this.generateCells(), this.state.events[dayN]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this));\n      dayN++;\n    }\n\n    this.setState({\n      daysHtml: daysToHtml\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.classes !== prevState.classes) {\n      this.setState({\n        classes: this.props.classes\n      }, () => this.renderClasses());\n    }\n  }\n\n  componentDidMount() {\n    let times = [];\n\n    for (let time = 8; time < 19; time++) {\n      times.push(time);\n    }\n\n    this.setState({\n      times: times\n    }, () => {\n      this.renderClasses();\n      this.renderTimes();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-12 pt-10 pr-10 pl-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline-block mt-5\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.timesHtml\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline-block col-span-11\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"grid grid-cols-5\",\n          children: this.state.daysHtml\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Schedule;","map":{"version":3,"sources":["/home/danielmelchor/Documents/CodeProjects/nexus/frontend/src/components/test/Schedule.js"],"names":["React","Schedule","Component","state","times","timesHtml","days","daysHtml","classes","renderClasses","class1","class2","class3","class4","colors","eventsL","colorCount","cellHeight","course","includes","push","i","length","minEnd","slice","Number","minStart","duration","height","position","bottom","setState","events","renderStructure","generateCells","cells","renderTimes","timesToHtml","time","daysToHtml","dayN","day","componentDidUpdate","prevProps","prevState","props","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react'\n\n\n\nclass Schedule extends React.Component {\n    state = {\n        times: [],\n        timesHtml: [],\n        days: [\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\"],\n        daysHtml: [],\n        classes: []\n    }\n\n    renderClasses() {\n        // Fake list of classes\n        let class1 = { \"start\":\"11:00\",\"end\":\"12:15\",\"title\":\"CAS CS 112 A1\",\"days\":\"Tue/Thu\" }\n        let class2 = { \"start\":\"14:00\",\"end\":\"15:15\",\"title\":\"CAS CS 132 A1\",\"days\":\"Tue/Thu\" }\n        let class3 = { \"start\":\"08:00\",\"end\":\"08:50\",\"title\":\"CAS WR 120 A1\",\"days\":\"Mon/Wed/Fri\" }\n        let class4 = { \"start\":\"09:05\",\"end\":\"09:55\",\"title\":\"CAS PH 100 A1\",\"days\":\"Mon/Wed/Fri\" }\n\n        let classes = [class1,class2,class3,class4]\n\n        // Possible colors for classes\n        let colors = [\"red\",\"pink\",\"purple\",\"indigo\",\"blue\"]\n        let eventsL = [[],[],[],[],[]]\n\n        let colorCount = 0;\n\n        // Height of the cells in the schedule\n        let cellHeight = 48;\n\n        for(const course of classes) {  \n            var days=[]\n\n            // Add classes to their corresponding days\n            if(course['days'].includes('Mon')) {\n                days.push(0)\n            }\n            if(course['days'].includes('Tue')) {\n                days.push(1)\n            }\n            if(course['days'].includes('Wed')) {\n                days.push(2)\n            }\n            if(course['days'].includes('Thu')) {\n                days.push(3)\n            }\n            if(course['days'].includes('Fri')) {\n                days.push(4)\n            }\n\n            // Display classes\n            for(let i = 0; i< days.length; i++) {\n                // Conver to minutes for decimals\n                let minEnd = course['end'].slice(0,2)*60+Number(course['end'].slice(3,5))\n                let minStart = course['start'].slice(0,2)*60+Number(course['start'].slice(3,5))\n\n                // Duration in min\n                let duration = minEnd - minStart;\n\n                // Simple calc to get what height the class should have\n                let height = duration*cellHeight/60\n\n                // 18 is the max time displayed, so we move it these many cells up\n                let position = (18-(minStart/60))*cellHeight - height\n\n                // HTML Saving\n                eventsL[days[i]].push(\n                    <li className=\"relative w-full\">\n                        <li className={\"flex bg-\" + colors[colorCount%colors.length] + \"-300 w-full absolute hover:bg-\" + colors[colorCount%colors.length] + \"-400\"}\n                            style={{ bottom: position,height:height}} >\n                            <span className=\"text-center w-full block self-center\">{course['title']}</span>\n                        </li> \n                    </li>\n                )\n            }\n            colorCount++;\n        }\n        this.setState({events:eventsL},() => this.renderStructure())\n    }\n\n    generateCells() {\n        let cells = []\n\n        // Add one cell per time\n        for(let i = 0; i < this.state.times.length-1; i++) {\n            cells.push(<li className=\"w-full border border-gray-200 block h-12 p-5 hover:bg-gray-100\"></li>)\n        }\n\n        return cells;\n    }\n\n    renderTimes() {\n        let timesToHtml = []\n\n        // Diplay the hours\n        for(const time of this.state.times) {\n            timesToHtml.push(<li className=\"text-gray-600 w-100 text-right h-12 pr-3\">{time}:00</li>)\n        }\n\n        this.setState({ timesHtml: timesToHtml })\n    }\n\n    renderStructure() {\n        let daysToHtml = []\n        let dayN = 0\n\n        // Each column of the calendar (day)\n        for(const day of this.state.days) {\n            daysToHtml.push(\n                <li className=\"inline-block text-center\">\n                    <div className=\"pb-2 text-gray-600\">{day}</div>\n                    <ul>{this.generateCells()}{this.state.events[dayN]}</ul>\n                </li>\n            )\n            dayN++;\n        }\n\n        this.setState({ daysHtml: daysToHtml })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.classes !== prevState.classes) {\n            this.setState({ classes: this.props.classes },() => this.renderClasses());\n        }\n    }\n\n    componentDidMount() {\n        let times = []\n        for(let time = 8; time < 19;time++) {\n            times.push(time)\n        }\n\n        this.setState({\n            times: times\n        },() => {\n            this.renderClasses()\n            this.renderTimes()\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"grid grid-cols-12 pt-10 pr-10 pl-4\">\n                <div className=\"inline-block mt-5\">\n                    <ul>\n                        { this.state.timesHtml }\n                    </ul>\n                </div>\n                <div className=\"inline-block col-span-11\">\n                    <ul className=\"grid grid-cols-5\">\n                        { this.state.daysHtml }\n                    </ul>\n                </div>\n                <div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Schedule;"]},"metadata":{},"sourceType":"module"}