{"ast":null,"code":"var _jsxFileName = \"/home/danielmelchor/Documents/CodeProjects/nexus/frontend/src/pages/Planner/Calendar/ScheduleList.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { changeCalendar } from \"../../../state/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    activeCalendar: state.activeCalendar,\n    calendars: state.calendars\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeCalendar: calendar => dispatch(changeCalendar(calendar))\n  };\n};\n\nclass ScheduleList extends Component {\n  constructor(props) {\n    super(props);\n    this.changeCalendar = this.changeCalendar.bind(this);\n  }\n\n  changeCalendar(e) {\n    let itemTitle = e.target.value;\n\n    for (const schedule of this.props.calendars) if (schedule.title.toLowerCase() === itemTitle.toLowerCase()) this.props.changeCalendar(schedule);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"capitalize ml-3 bg-gray-200 rounded-full p-1\",\n      onChange: this.changeCalendar,\n      children: this.props.calendars.map((item, key) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          className: \"capitalize\",\n          value: item.title,\n          children: item.title\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScheduleList);","map":{"version":3,"sources":["/home/danielmelchor/Documents/CodeProjects/nexus/frontend/src/pages/Planner/Calendar/ScheduleList.js"],"names":["React","Component","connect","changeCalendar","mapStateToProps","state","activeCalendar","calendars","mapDispatchToProps","dispatch","calendar","ScheduleList","constructor","props","bind","e","itemTitle","target","value","schedule","title","toLowerCase","render","map","item","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,wBAA/B;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,cAAc,EAAED,KAAK,CAACC,cADjB;AAELC,IAAAA,SAAS,EAAEF,KAAK,CAACE;AAFZ,GAAP;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLN,IAAAA,cAAc,EAAGO,QAAD,IAAcD,QAAQ,CAACN,cAAc,CAACO,QAAD,CAAf;AADjC,GAAP;AAGD,CAJD;;AAMA,MAAMC,YAAN,SAA2BV,SAA3B,CAAqC;AACnCW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKV,cAAL,GAAsB,KAAKA,cAAL,CAAoBW,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDX,EAAAA,cAAc,CAACY,CAAD,EAAI;AAChB,QAAIC,SAAS,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAzB;;AAEA,SAAK,MAAMC,QAAX,IAAuB,KAAKN,KAAL,CAAWN,SAAlC,EACE,IAAIY,QAAQ,CAACC,KAAT,CAAeC,WAAf,OAAiCL,SAAS,CAACK,WAAV,EAArC,EACE,KAAKR,KAAL,CAAWV,cAAX,CAA0BgB,QAA1B;AACL;;AAEDG,EAAAA,MAAM,GAAG;AACP,wBACE;AACE,MAAA,SAAS,EAAC,8CADZ;AAEE,MAAA,QAAQ,EAAE,KAAKnB,cAFjB;AAAA,gBAIG,KAAKU,KAAL,CAAWN,SAAX,CAAqBgB,GAArB,CAAyB,CAACC,IAAD,EAAOC,GAAP,KAAe;AACvC,4BACE;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAAyC,UAAA,KAAK,EAAED,IAAI,CAACJ,KAArD;AAAA,oBACGI,IAAI,CAACJ;AADR,WAAoCK,GAApC;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANA;AAJH;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AA9BkC;;AAiCrC,eAAevB,OAAO,CAACE,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CG,YAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { changeCalendar } from \"../../../state/actions\";\n\nconst mapStateToProps = (state) => {\n  return {\n    activeCalendar: state.activeCalendar,\n    calendars: state.calendars,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    changeCalendar: (calendar) => dispatch(changeCalendar(calendar)),\n  };\n};\n\nclass ScheduleList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeCalendar = this.changeCalendar.bind(this);\n  }\n\n  changeCalendar(e) {\n    let itemTitle = e.target.value;\n\n    for (const schedule of this.props.calendars)\n      if (schedule.title.toLowerCase() === itemTitle.toLowerCase())\n        this.props.changeCalendar(schedule);\n  }\n\n  render() {\n    return (\n      <select\n        className=\"capitalize ml-3 bg-gray-200 rounded-full p-1\"\n        onChange={this.changeCalendar}\n      >\n        {this.props.calendars.map((item, key) => {\n          return (\n            <option className=\"capitalize\" key={key} value={item.title}>\n              {item.title}\n            </option>\n          );\n        })}\n      </select>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScheduleList);\n"]},"metadata":{},"sourceType":"module"}