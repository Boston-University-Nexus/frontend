{"ast":null,"code":"var _jsxFileName = \"/home/danielmelchor/Documents/CodeProjects/nexus/frontend/src/pages/Planner/Cart/Cart.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { saveSections } from \"../../../state/actions\";\nimport CartItem from \"./CartItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    activeSections: state.activeSections,\n    activeCalendar: state.activeCalendar\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveSections: sections => dispatch(saveSections(sections))\n  };\n};\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.updateCart = this.updateCart.bind(this);\n  }\n\n  updateCart(thisTitle, item) {\n    let currentSections = [...this.props.activeSections];\n    let found = false;\n\n    for (let i = 0; i < currentSections.length; i++) if (currentSections[i].title === thisTitle) {\n      currentSections[i];\n      found = true;\n    }\n\n    if (!found) currentSections.push(item);\n    this.props.saveSections(currentSections);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/5 h-full bg-blue-100 flex flex-col\",\n      children: this.props.activeCalendar.sections && this.props.activeCalendar.sections.map((item, key) => {\n        return /*#__PURE__*/_jsxDEV(CartItem, {\n          item: item,\n          updateCart: this.updateCart\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","map":{"version":3,"sources":["/home/danielmelchor/Documents/CodeProjects/nexus/frontend/src/pages/Planner/Cart/Cart.js"],"names":["React","Component","connect","saveSections","CartItem","mapStateToProps","state","activeSections","activeCalendar","mapDispatchToProps","dispatch","sections","Cart","constructor","props","updateCart","bind","thisTitle","item","currentSections","found","i","length","title","push","render","map","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AAEA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,cAAc,EAAED,KAAK,CAACC,cADjB;AAELC,IAAAA,cAAc,EAAEF,KAAK,CAACE;AAFjB,GAAP;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLP,IAAAA,YAAY,EAAGQ,QAAD,IAAcD,QAAQ,CAACP,YAAY,CAACQ,QAAD,CAAb;AAD/B,GAAP;AAGD,CAJD;;AAMA,MAAMC,IAAN,SAAmBX,SAAnB,CAA6B;AAC3BY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAEDD,EAAAA,UAAU,CAACE,SAAD,EAAYC,IAAZ,EAAkB;AAC1B,QAAIC,eAAe,GAAG,CAAC,GAAG,KAAKL,KAAL,CAAWP,cAAf,CAAtB;AACA,QAAIa,KAAK,GAAG,KAAZ;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,eAAe,CAACG,MAApC,EAA4CD,CAAC,EAA7C,EACE,IAAIF,eAAe,CAACE,CAAD,CAAf,CAAmBE,KAAnB,KAA6BN,SAAjC,EAA4C;AAC1CE,MAAAA,eAAe,CAACE,CAAD,CAAf;AACAD,MAAAA,KAAK,GAAG,IAAR;AACD;;AAEH,QAAI,CAACA,KAAL,EAAYD,eAAe,CAACK,IAAhB,CAAqBN,IAArB;AAEZ,SAAKJ,KAAL,CAAWX,YAAX,CAAwBgB,eAAxB;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,wCAAf;AAAA,gBACG,KAAKX,KAAL,CAAWN,cAAX,CAA0BG,QAA1B,IACC,KAAKG,KAAL,CAAWN,cAAX,CAA0BG,QAA1B,CAAmCe,GAAnC,CAAuC,CAACR,IAAD,EAAOS,GAAP,KAAe;AACpD,4BACE,QAAC,QAAD;AAAU,UAAA,IAAI,EAAET,IAAhB;AAAgC,UAAA,UAAU,EAAE,KAAKH;AAAjD,WAA2BY,GAA3B;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD,OAJD;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAjC0B;;AAoC7B,eAAezB,OAAO,CAACG,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CG,IAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { saveSections } from \"../../../state/actions\";\n\nimport CartItem from \"./CartItem\";\n\nconst mapStateToProps = (state) => {\n  return {\n    activeSections: state.activeSections,\n    activeCalendar: state.activeCalendar,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    saveSections: (sections) => dispatch(saveSections(sections)),\n  };\n};\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateCart = this.updateCart.bind(this);\n  }\n\n  updateCart(thisTitle, item) {\n    let currentSections = [...this.props.activeSections];\n    let found = false;\n\n    for (let i = 0; i < currentSections.length; i++)\n      if (currentSections[i].title === thisTitle) {\n        currentSections[i];\n        found = true;\n      }\n\n    if (!found) currentSections.push(item);\n\n    this.props.saveSections(currentSections);\n  }\n\n  render() {\n    return (\n      <div className=\"w-1/5 h-full bg-blue-100 flex flex-col\">\n        {this.props.activeCalendar.sections &&\n          this.props.activeCalendar.sections.map((item, key) => {\n            return (\n              <CartItem item={item} key={key} updateCart={this.updateCart} />\n            );\n          })}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n"]},"metadata":{},"sourceType":"module"}