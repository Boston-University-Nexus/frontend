{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar useMonitorOutput_1 = require(\"./internal/useMonitorOutput\");\n\nvar drag_1 = require(\"./internal/drag\");\n\nvar react_1 = require(\"react\");\n\nvar invariant = require('invariant');\n/**\n * useDragSource hook\n * @param sourceSpec The drag source specification *\n */\n\n\nfunction useDrag(spec) {\n  var specRef = react_1.useRef(spec);\n  specRef.current = spec; // TODO: wire options into createSourceConnector\n\n  invariant(spec.item != null, 'item must be defined');\n  invariant(spec.item.type != null, 'item type must be defined');\n\n  var _a = drag_1.useDragSourceMonitor(),\n      monitor = _a[0],\n      connector = _a[1];\n\n  drag_1.useDragHandler(specRef, monitor, connector);\n  var result = useMonitorOutput_1.useMonitorOutput(monitor, specRef.current.collect || function () {\n    return {};\n  }, function () {\n    return connector.reconnect();\n  });\n  var connectDragSource = react_1.useMemo(function () {\n    return connector.hooks.dragSource();\n  }, [connector]);\n  var connectDragPreview = react_1.useMemo(function () {\n    return connector.hooks.dragPreview();\n  }, [connector]);\n  react_1.useEffect(function () {\n    connector.dragSourceOptions = specRef.current.options || null;\n    connector.reconnect();\n  }, [connector]);\n  react_1.useEffect(function () {\n    connector.dragPreviewOptions = specRef.current.previewOptions || null;\n    connector.reconnect();\n  }, [connector]);\n  return [result, connectDragSource, connectDragPreview];\n}\n\nexports.useDrag = useDrag;","map":{"version":3,"sources":["/home/danielmelchor/Documents/CodeProjects/nexus/frontend/node_modules/react-dnd/lib/cjs/hooks/useDrag.js"],"names":["Object","defineProperty","exports","value","useMonitorOutput_1","require","drag_1","react_1","invariant","useDrag","spec","specRef","useRef","current","item","type","_a","useDragSourceMonitor","monitor","connector","useDragHandler","result","useMonitorOutput","collect","reconnect","connectDragSource","useMemo","hooks","dragSource","connectDragPreview","dragPreview","useEffect","dragSourceOptions","options","dragPreviewOptions","previewOptions"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,kBAAkB,GAAGC,OAAO,CAAC,6BAAD,CAAhC;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,iBAAD,CAApB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,OAAD,CAArB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,WAAD,CAAvB;AACA;AACA;AACA;AACA;;;AACA,SAASI,OAAT,CAAiBC,IAAjB,EAAuB;AACnB,MAAIC,OAAO,GAAGJ,OAAO,CAACK,MAAR,CAAeF,IAAf,CAAd;AACAC,EAAAA,OAAO,CAACE,OAAR,GAAkBH,IAAlB,CAFmB,CAGnB;;AACAF,EAAAA,SAAS,CAACE,IAAI,CAACI,IAAL,IAAa,IAAd,EAAoB,sBAApB,CAAT;AACAN,EAAAA,SAAS,CAACE,IAAI,CAACI,IAAL,CAAUC,IAAV,IAAkB,IAAnB,EAAyB,2BAAzB,CAAT;;AACA,MAAIC,EAAE,GAAGV,MAAM,CAACW,oBAAP,EAAT;AAAA,MAAwCC,OAAO,GAAGF,EAAE,CAAC,CAAD,CAApD;AAAA,MAAyDG,SAAS,GAAGH,EAAE,CAAC,CAAD,CAAvE;;AACAV,EAAAA,MAAM,CAACc,cAAP,CAAsBT,OAAtB,EAA+BO,OAA/B,EAAwCC,SAAxC;AACA,MAAIE,MAAM,GAAGjB,kBAAkB,CAACkB,gBAAnB,CAAoCJ,OAApC,EAA6CP,OAAO,CAACE,OAAR,CAAgBU,OAAhB,IAA4B,YAAY;AAAE,WAAQ,EAAR;AAAc,GAArG,EAAwG,YAAY;AAAE,WAAOJ,SAAS,CAACK,SAAV,EAAP;AAA+B,GAArJ,CAAb;AACA,MAAIC,iBAAiB,GAAGlB,OAAO,CAACmB,OAAR,CAAgB,YAAY;AAAE,WAAOP,SAAS,CAACQ,KAAV,CAAgBC,UAAhB,EAAP;AAAsC,GAApE,EAAsE,CAC1FT,SAD0F,CAAtE,CAAxB;AAGA,MAAIU,kBAAkB,GAAGtB,OAAO,CAACmB,OAAR,CAAgB,YAAY;AAAE,WAAOP,SAAS,CAACQ,KAAV,CAAgBG,WAAhB,EAAP;AAAuC,GAArE,EAAuE,CAC5FX,SAD4F,CAAvE,CAAzB;AAGAZ,EAAAA,OAAO,CAACwB,SAAR,CAAkB,YAAY;AAC1BZ,IAAAA,SAAS,CAACa,iBAAV,GAA8BrB,OAAO,CAACE,OAAR,CAAgBoB,OAAhB,IAA2B,IAAzD;AACAd,IAAAA,SAAS,CAACK,SAAV;AACH,GAHD,EAGG,CAACL,SAAD,CAHH;AAIAZ,EAAAA,OAAO,CAACwB,SAAR,CAAkB,YAAY;AAC1BZ,IAAAA,SAAS,CAACe,kBAAV,GAA+BvB,OAAO,CAACE,OAAR,CAAgBsB,cAAhB,IAAkC,IAAjE;AACAhB,IAAAA,SAAS,CAACK,SAAV;AACH,GAHD,EAGG,CAACL,SAAD,CAHH;AAIA,SAAO,CAACE,MAAD,EAASI,iBAAT,EAA4BI,kBAA5B,CAAP;AACH;;AACD3B,OAAO,CAACO,OAAR,GAAkBA,OAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar useMonitorOutput_1 = require(\"./internal/useMonitorOutput\");\nvar drag_1 = require(\"./internal/drag\");\nvar react_1 = require(\"react\");\nvar invariant = require('invariant');\n/**\n * useDragSource hook\n * @param sourceSpec The drag source specification *\n */\nfunction useDrag(spec) {\n    var specRef = react_1.useRef(spec);\n    specRef.current = spec;\n    // TODO: wire options into createSourceConnector\n    invariant(spec.item != null, 'item must be defined');\n    invariant(spec.item.type != null, 'item type must be defined');\n    var _a = drag_1.useDragSourceMonitor(), monitor = _a[0], connector = _a[1];\n    drag_1.useDragHandler(specRef, monitor, connector);\n    var result = useMonitorOutput_1.useMonitorOutput(monitor, specRef.current.collect || (function () { return ({}); }), function () { return connector.reconnect(); });\n    var connectDragSource = react_1.useMemo(function () { return connector.hooks.dragSource(); }, [\n        connector,\n    ]);\n    var connectDragPreview = react_1.useMemo(function () { return connector.hooks.dragPreview(); }, [\n        connector,\n    ]);\n    react_1.useEffect(function () {\n        connector.dragSourceOptions = specRef.current.options || null;\n        connector.reconnect();\n    }, [connector]);\n    react_1.useEffect(function () {\n        connector.dragPreviewOptions = specRef.current.previewOptions || null;\n        connector.reconnect();\n    }, [connector]);\n    return [result, connectDragSource, connectDragPreview];\n}\nexports.useDrag = useDrag;\n"]},"metadata":{},"sourceType":"script"}