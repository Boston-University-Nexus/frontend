{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar discount_lodash_1 = require(\"../discount_lodash\");\n/**\n * Provides a set of static methods for creating Disposables.\n * @param {Function} action Action to run during the first call to dispose.\n * The action is guaranteed to be run at most once.\n */\n\n\nvar Disposable =\n/** @class */\nfunction () {\n  function Disposable(action) {\n    this.isDisposed = false;\n    this.action = discount_lodash_1.isFunction(action) ? action : discount_lodash_1.noop;\n  }\n  /**\n   * Validates whether the given object is a disposable\n   * @param {Object} Object to test whether it has a dispose method\n   * @returns {Boolean} true if a disposable object, else false.\n   */\n\n\n  Disposable.isDisposable = function (d) {\n    return d && discount_lodash_1.isFunction(d.dispose);\n  };\n\n  Disposable._fixup = function (result) {\n    return Disposable.isDisposable(result) ? result : Disposable.empty;\n  };\n  /**\n   * Creates a disposable object that invokes the specified action when disposed.\n   * @param {Function} dispose Action to run during the first call to dispose.\n   * The action is guaranteed to be run at most once.\n   * @return {Disposable} The disposable object that runs the given action upon disposal.\n   */\n\n\n  Disposable.create = function (action) {\n    return new Disposable(action);\n  };\n  /** Performs the task of cleaning up resources. */\n\n\n  Disposable.prototype.dispose = function () {\n    if (!this.isDisposed) {\n      this.action();\n      this.isDisposed = true;\n    }\n  };\n  /**\n   * Gets the disposable that does nothing when disposed.\n   */\n\n\n  Disposable.empty = {\n    dispose: discount_lodash_1.noop\n  };\n  return Disposable;\n}();\n\nexports.Disposable = Disposable;","map":{"version":3,"sources":["/home/danielmelchor/Documents/CodeProjects/nexus/frontend/node_modules/react-dnd/lib/cjs/utils/disposables/Disposable.js"],"names":["Object","defineProperty","exports","value","discount_lodash_1","require","Disposable","action","isDisposed","isFunction","noop","isDisposable","d","dispose","_fixup","result","empty","create","prototype"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,iBAAiB,GAAGC,OAAO,CAAC,oBAAD,CAA/B;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,UAAU;AAAG;AAAe,YAAY;AACxC,WAASA,UAAT,CAAoBC,MAApB,EAA4B;AACxB,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKD,MAAL,GAAcH,iBAAiB,CAACK,UAAlB,CAA6BF,MAA7B,IAAuCA,MAAvC,GAAgDH,iBAAiB,CAACM,IAAhF;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIJ,EAAAA,UAAU,CAACK,YAAX,GAA0B,UAAUC,CAAV,EAAa;AACnC,WAAOA,CAAC,IAAIR,iBAAiB,CAACK,UAAlB,CAA6BG,CAAC,CAACC,OAA/B,CAAZ;AACH,GAFD;;AAGAP,EAAAA,UAAU,CAACQ,MAAX,GAAoB,UAAUC,MAAV,EAAkB;AAClC,WAAOT,UAAU,CAACK,YAAX,CAAwBI,MAAxB,IAAkCA,MAAlC,GAA2CT,UAAU,CAACU,KAA7D;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;;;AACIV,EAAAA,UAAU,CAACW,MAAX,GAAoB,UAAUV,MAAV,EAAkB;AAClC,WAAO,IAAID,UAAJ,CAAeC,MAAf,CAAP;AACH,GAFD;AAGA;;;AACAD,EAAAA,UAAU,CAACY,SAAX,CAAqBL,OAArB,GAA+B,YAAY;AACvC,QAAI,CAAC,KAAKL,UAAV,EAAsB;AAClB,WAAKD,MAAL;AACA,WAAKC,UAAL,GAAkB,IAAlB;AACH;AACJ,GALD;AAMA;AACJ;AACA;;;AACIF,EAAAA,UAAU,CAACU,KAAX,GAAmB;AAAEH,IAAAA,OAAO,EAAET,iBAAiB,CAACM;AAA7B,GAAnB;AACA,SAAOJ,UAAP;AACH,CArC+B,EAAhC;;AAsCAJ,OAAO,CAACI,UAAR,GAAqBA,UAArB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar discount_lodash_1 = require(\"../discount_lodash\");\n/**\n * Provides a set of static methods for creating Disposables.\n * @param {Function} action Action to run during the first call to dispose.\n * The action is guaranteed to be run at most once.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable(action) {\n        this.isDisposed = false;\n        this.action = discount_lodash_1.isFunction(action) ? action : discount_lodash_1.noop;\n    }\n    /**\n     * Validates whether the given object is a disposable\n     * @param {Object} Object to test whether it has a dispose method\n     * @returns {Boolean} true if a disposable object, else false.\n     */\n    Disposable.isDisposable = function (d) {\n        return d && discount_lodash_1.isFunction(d.dispose);\n    };\n    Disposable._fixup = function (result) {\n        return Disposable.isDisposable(result) ? result : Disposable.empty;\n    };\n    /**\n     * Creates a disposable object that invokes the specified action when disposed.\n     * @param {Function} dispose Action to run during the first call to dispose.\n     * The action is guaranteed to be run at most once.\n     * @return {Disposable} The disposable object that runs the given action upon disposal.\n     */\n    Disposable.create = function (action) {\n        return new Disposable(action);\n    };\n    /** Performs the task of cleaning up resources. */\n    Disposable.prototype.dispose = function () {\n        if (!this.isDisposed) {\n            this.action();\n            this.isDisposed = true;\n        }\n    };\n    /**\n     * Gets the disposable that does nothing when disposed.\n     */\n    Disposable.empty = { dispose: discount_lodash_1.noop };\n    return Disposable;\n}());\nexports.Disposable = Disposable;\n"]},"metadata":{},"sourceType":"script"}