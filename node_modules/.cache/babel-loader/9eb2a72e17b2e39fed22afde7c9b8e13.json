{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar redux_1 = require(\"redux\");\n\nvar reducers_1 = require(\"./reducers\");\n\nvar dragDrop_1 = require(\"./actions/dragDrop\");\n\nvar DragDropMonitorImpl_1 = require(\"./DragDropMonitorImpl\");\n\nvar HandlerRegistryImpl_1 = require(\"./HandlerRegistryImpl\");\n\nfunction makeStoreInstance(debugMode) {\n  // TODO: if we ever make a react-native version of this,\n  // we'll need to consider how to pull off dev-tooling\n  var reduxDevTools = typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__;\n  return redux_1.createStore(reducers_1.default, debugMode && reduxDevTools && reduxDevTools({\n    name: 'dnd-core',\n    instanceId: 'dnd-core'\n  }));\n}\n\nvar DragDropManagerImpl =\n/** @class */\nfunction () {\n  function DragDropManagerImpl(createBackend, context, debugMode) {\n    var _this = this;\n\n    if (context === void 0) {\n      context = {};\n    }\n\n    if (debugMode === void 0) {\n      debugMode = false;\n    }\n\n    this.context = context;\n    this.isSetUp = false;\n\n    this.handleRefCountChange = function () {\n      var shouldSetUp = _this.store.getState().refCount > 0;\n\n      if (shouldSetUp && !_this.isSetUp) {\n        _this.backend.setup();\n\n        _this.isSetUp = true;\n      } else if (!shouldSetUp && _this.isSetUp) {\n        _this.backend.teardown();\n\n        _this.isSetUp = false;\n      }\n    };\n\n    var store = makeStoreInstance(debugMode);\n    this.store = store;\n    this.monitor = new DragDropMonitorImpl_1.default(store, new HandlerRegistryImpl_1.default(store));\n    this.backend = createBackend(this);\n    store.subscribe(this.handleRefCountChange);\n  }\n\n  DragDropManagerImpl.prototype.getContext = function () {\n    return this.context;\n  };\n\n  DragDropManagerImpl.prototype.getMonitor = function () {\n    return this.monitor;\n  };\n\n  DragDropManagerImpl.prototype.getBackend = function () {\n    return this.backend;\n  };\n\n  DragDropManagerImpl.prototype.getRegistry = function () {\n    return this.monitor.registry;\n  };\n\n  DragDropManagerImpl.prototype.getActions = function () {\n    var manager = this;\n    var dispatch = this.store.dispatch;\n\n    function bindActionCreator(actionCreator) {\n      return function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var action = actionCreator.apply(manager, args);\n\n        if (typeof action !== 'undefined') {\n          dispatch(action);\n        }\n      };\n    }\n\n    var actions = dragDrop_1.default(this);\n    return Object.keys(actions).reduce(function (boundActions, key) {\n      var action = actions[key];\n      boundActions[key] = bindActionCreator(action);\n      return boundActions;\n    }, {});\n  };\n\n  DragDropManagerImpl.prototype.dispatch = function (action) {\n    this.store.dispatch(action);\n  };\n\n  return DragDropManagerImpl;\n}();\n\nexports.default = DragDropManagerImpl;","map":{"version":3,"sources":["/home/danielmelchor/Documents/CodeProjects/nexus/frontend/node_modules/dnd-core/lib/cjs/DragDropManagerImpl.js"],"names":["Object","defineProperty","exports","value","redux_1","require","reducers_1","dragDrop_1","DragDropMonitorImpl_1","HandlerRegistryImpl_1","makeStoreInstance","debugMode","reduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","createStore","default","name","instanceId","DragDropManagerImpl","createBackend","context","_this","isSetUp","handleRefCountChange","shouldSetUp","store","getState","refCount","backend","setup","teardown","monitor","subscribe","prototype","getContext","getMonitor","getBackend","getRegistry","registry","getActions","manager","dispatch","bindActionCreator","actionCreator","args","_i","arguments","length","action","apply","actions","keys","reduce","boundActions","key"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar redux_1 = require(\"redux\");\nvar reducers_1 = require(\"./reducers\");\nvar dragDrop_1 = require(\"./actions/dragDrop\");\nvar DragDropMonitorImpl_1 = require(\"./DragDropMonitorImpl\");\nvar HandlerRegistryImpl_1 = require(\"./HandlerRegistryImpl\");\nfunction makeStoreInstance(debugMode) {\n    // TODO: if we ever make a react-native version of this,\n    // we'll need to consider how to pull off dev-tooling\n    var reduxDevTools = typeof window !== 'undefined' &&\n        window.__REDUX_DEVTOOLS_EXTENSION__;\n    return redux_1.createStore(reducers_1.default, debugMode &&\n        reduxDevTools &&\n        reduxDevTools({\n            name: 'dnd-core',\n            instanceId: 'dnd-core',\n        }));\n}\nvar DragDropManagerImpl = /** @class */ (function () {\n    function DragDropManagerImpl(createBackend, context, debugMode) {\n        var _this = this;\n        if (context === void 0) { context = {}; }\n        if (debugMode === void 0) { debugMode = false; }\n        this.context = context;\n        this.isSetUp = false;\n        this.handleRefCountChange = function () {\n            var shouldSetUp = _this.store.getState().refCount > 0;\n            if (shouldSetUp && !_this.isSetUp) {\n                _this.backend.setup();\n                _this.isSetUp = true;\n            }\n            else if (!shouldSetUp && _this.isSetUp) {\n                _this.backend.teardown();\n                _this.isSetUp = false;\n            }\n        };\n        var store = makeStoreInstance(debugMode);\n        this.store = store;\n        this.monitor = new DragDropMonitorImpl_1.default(store, new HandlerRegistryImpl_1.default(store));\n        this.backend = createBackend(this);\n        store.subscribe(this.handleRefCountChange);\n    }\n    DragDropManagerImpl.prototype.getContext = function () {\n        return this.context;\n    };\n    DragDropManagerImpl.prototype.getMonitor = function () {\n        return this.monitor;\n    };\n    DragDropManagerImpl.prototype.getBackend = function () {\n        return this.backend;\n    };\n    DragDropManagerImpl.prototype.getRegistry = function () {\n        return this.monitor.registry;\n    };\n    DragDropManagerImpl.prototype.getActions = function () {\n        var manager = this;\n        var dispatch = this.store.dispatch;\n        function bindActionCreator(actionCreator) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var action = actionCreator.apply(manager, args);\n                if (typeof action !== 'undefined') {\n                    dispatch(action);\n                }\n            };\n        }\n        var actions = dragDrop_1.default(this);\n        return Object.keys(actions).reduce(function (boundActions, key) {\n            var action = actions[key];\n            boundActions[key] = bindActionCreator(action);\n            return boundActions;\n        }, {});\n    };\n    DragDropManagerImpl.prototype.dispatch = function (action) {\n        this.store.dispatch(action);\n    };\n    return DragDropManagerImpl;\n}());\nexports.default = DragDropManagerImpl;\n"]},"metadata":{},"sourceType":"script"}