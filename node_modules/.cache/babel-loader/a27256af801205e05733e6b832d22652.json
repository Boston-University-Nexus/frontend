{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar wrapConnectorHooks_1 = require(\"./wrapConnectorHooks\");\n\nvar isRef_1 = require(\"./utils/isRef\");\n\nvar shallowEqual = require('shallowequal');\n\nvar SourceConnector =\n/** @class */\nfunction () {\n  function SourceConnector(backend) {\n    var _this = this;\n\n    this.backend = backend;\n    this.hooks = wrapConnectorHooks_1.default({\n      dragSource: function (node, options) {\n        _this.dragSourceOptions = options || null;\n\n        if (isRef_1.isRef(node)) {\n          _this.dragSourceRef = node;\n        } else {\n          _this.dragSourceNode = node;\n        }\n\n        _this.reconnectDragSource();\n      },\n      dragPreview: function (node, options) {\n        _this.dragPreviewOptions = options || null;\n\n        if (isRef_1.isRef(node)) {\n          _this.dragPreviewRef = node;\n        } else {\n          _this.dragPreviewNode = node;\n        }\n\n        _this.reconnectDragPreview();\n      }\n    });\n    this.handlerId = null; // The drop target may either be attached via ref or connect function\n\n    this.dragSourceRef = null;\n    this.dragSourceOptionsInternal = null; // The drag preview may either be attached via ref or connect function\n\n    this.dragPreviewRef = null;\n    this.dragPreviewOptionsInternal = null;\n    this.lastConnectedHandlerId = null;\n    this.lastConnectedDragSource = null;\n    this.lastConnectedDragSourceOptions = null;\n    this.lastConnectedDragPreview = null;\n    this.lastConnectedDragPreviewOptions = null;\n  }\n\n  SourceConnector.prototype.receiveHandlerId = function (newHandlerId) {\n    if (this.handlerId === newHandlerId) {\n      return;\n    }\n\n    this.handlerId = newHandlerId;\n    this.reconnect();\n  };\n\n  Object.defineProperty(SourceConnector.prototype, \"connectTarget\", {\n    get: function () {\n      return this.dragSource;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SourceConnector.prototype, \"dragSourceOptions\", {\n    get: function () {\n      return this.dragSourceOptionsInternal;\n    },\n    set: function (options) {\n      this.dragSourceOptionsInternal = options;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SourceConnector.prototype, \"dragPreviewOptions\", {\n    get: function () {\n      return this.dragPreviewOptionsInternal;\n    },\n    set: function (options) {\n      this.dragPreviewOptionsInternal = options;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  SourceConnector.prototype.reconnect = function () {\n    this.reconnectDragSource();\n    this.reconnectDragPreview();\n  };\n\n  SourceConnector.prototype.reconnectDragSource = function () {\n    // if nothing has changed then don't resubscribe\n    var didChange = this.didHandlerIdChange() || this.didConnectedDragSourceChange() || this.didDragSourceOptionsChange();\n\n    if (didChange) {\n      this.disconnectDragSource();\n    }\n\n    var dragSource = this.dragSource;\n\n    if (!this.handlerId) {\n      return;\n    }\n\n    if (!dragSource) {\n      this.lastConnectedDragSource = dragSource;\n      return;\n    }\n\n    if (didChange) {\n      this.lastConnectedHandlerId = this.handlerId;\n      this.lastConnectedDragSource = dragSource;\n      this.lastConnectedDragSourceOptions = this.dragSourceOptions;\n      this.dragSourceUnsubscribe = this.backend.connectDragSource(this.handlerId, dragSource, this.dragSourceOptions);\n    }\n  };\n\n  SourceConnector.prototype.reconnectDragPreview = function () {\n    // if nothing has changed then don't resubscribe\n    var didChange = this.didHandlerIdChange() || this.didConnectedDragPreviewChange() || this.didDragPreviewOptionsChange();\n\n    if (didChange) {\n      this.disconnectDragPreview();\n    }\n\n    var dragPreview = this.dragPreview;\n\n    if (!this.handlerId || !dragPreview) {\n      return;\n    }\n\n    if (didChange) {\n      this.lastConnectedHandlerId = this.handlerId;\n      this.lastConnectedDragPreview = dragPreview;\n      this.lastConnectedDragPreviewOptions = this.dragPreviewOptions;\n      this.dragPreviewUnsubscribe = this.backend.connectDragPreview(this.handlerId, dragPreview, this.dragPreviewOptions);\n    }\n  };\n\n  SourceConnector.prototype.didHandlerIdChange = function () {\n    return this.lastConnectedHandlerId !== this.handlerId;\n  };\n\n  SourceConnector.prototype.didConnectedDragSourceChange = function () {\n    return this.lastConnectedDragSource !== this.dragSource;\n  };\n\n  SourceConnector.prototype.didConnectedDragPreviewChange = function () {\n    return this.lastConnectedDragPreview !== this.dragPreview;\n  };\n\n  SourceConnector.prototype.didDragSourceOptionsChange = function () {\n    return !shallowEqual(this.lastConnectedDragSourceOptions, this.dragSourceOptions);\n  };\n\n  SourceConnector.prototype.didDragPreviewOptionsChange = function () {\n    return !shallowEqual(this.lastConnectedDragPreviewOptions, this.dragPreviewOptions);\n  };\n\n  SourceConnector.prototype.disconnectDragSource = function () {\n    if (this.dragSourceUnsubscribe) {\n      this.dragSourceUnsubscribe();\n      this.dragSourceUnsubscribe = undefined;\n      this.dragPreviewNode = null;\n      this.dragPreviewRef = null;\n    }\n  };\n\n  SourceConnector.prototype.disconnectDragPreview = function () {\n    if (this.dragPreviewUnsubscribe) {\n      this.dragPreviewUnsubscribe();\n      this.dragPreviewUnsubscribe = undefined;\n      this.dragPreviewNode = null;\n      this.dragPreviewRef = null;\n    }\n  };\n\n  Object.defineProperty(SourceConnector.prototype, \"dragSource\", {\n    get: function () {\n      return this.dragSourceNode || this.dragSourceRef && this.dragSourceRef.current;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SourceConnector.prototype, \"dragPreview\", {\n    get: function () {\n      return this.dragPreviewNode || this.dragPreviewRef && this.dragPreviewRef.current;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return SourceConnector;\n}();\n\nexports.default = SourceConnector;","map":{"version":3,"sources":["/home/danielmelchor/Documents/CodeProjects/nexus/frontend/node_modules/react-dnd/lib/cjs/SourceConnector.js"],"names":["Object","defineProperty","exports","value","wrapConnectorHooks_1","require","isRef_1","shallowEqual","SourceConnector","backend","_this","hooks","default","dragSource","node","options","dragSourceOptions","isRef","dragSourceRef","dragSourceNode","reconnectDragSource","dragPreview","dragPreviewOptions","dragPreviewRef","dragPreviewNode","reconnectDragPreview","handlerId","dragSourceOptionsInternal","dragPreviewOptionsInternal","lastConnectedHandlerId","lastConnectedDragSource","lastConnectedDragSourceOptions","lastConnectedDragPreview","lastConnectedDragPreviewOptions","prototype","receiveHandlerId","newHandlerId","reconnect","get","enumerable","configurable","set","didChange","didHandlerIdChange","didConnectedDragSourceChange","didDragSourceOptionsChange","disconnectDragSource","dragSourceUnsubscribe","connectDragSource","didConnectedDragPreviewChange","didDragPreviewOptionsChange","disconnectDragPreview","dragPreviewUnsubscribe","connectDragPreview","undefined","current"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar wrapConnectorHooks_1 = require(\"./wrapConnectorHooks\");\nvar isRef_1 = require(\"./utils/isRef\");\nvar shallowEqual = require('shallowequal');\nvar SourceConnector = /** @class */ (function () {\n    function SourceConnector(backend) {\n        var _this = this;\n        this.backend = backend;\n        this.hooks = wrapConnectorHooks_1.default({\n            dragSource: function (node, options) {\n                _this.dragSourceOptions = options || null;\n                if (isRef_1.isRef(node)) {\n                    _this.dragSourceRef = node;\n                }\n                else {\n                    _this.dragSourceNode = node;\n                }\n                _this.reconnectDragSource();\n            },\n            dragPreview: function (node, options) {\n                _this.dragPreviewOptions = options || null;\n                if (isRef_1.isRef(node)) {\n                    _this.dragPreviewRef = node;\n                }\n                else {\n                    _this.dragPreviewNode = node;\n                }\n                _this.reconnectDragPreview();\n            },\n        });\n        this.handlerId = null;\n        // The drop target may either be attached via ref or connect function\n        this.dragSourceRef = null;\n        this.dragSourceOptionsInternal = null;\n        // The drag preview may either be attached via ref or connect function\n        this.dragPreviewRef = null;\n        this.dragPreviewOptionsInternal = null;\n        this.lastConnectedHandlerId = null;\n        this.lastConnectedDragSource = null;\n        this.lastConnectedDragSourceOptions = null;\n        this.lastConnectedDragPreview = null;\n        this.lastConnectedDragPreviewOptions = null;\n    }\n    SourceConnector.prototype.receiveHandlerId = function (newHandlerId) {\n        if (this.handlerId === newHandlerId) {\n            return;\n        }\n        this.handlerId = newHandlerId;\n        this.reconnect();\n    };\n    Object.defineProperty(SourceConnector.prototype, \"connectTarget\", {\n        get: function () {\n            return this.dragSource;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SourceConnector.prototype, \"dragSourceOptions\", {\n        get: function () {\n            return this.dragSourceOptionsInternal;\n        },\n        set: function (options) {\n            this.dragSourceOptionsInternal = options;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SourceConnector.prototype, \"dragPreviewOptions\", {\n        get: function () {\n            return this.dragPreviewOptionsInternal;\n        },\n        set: function (options) {\n            this.dragPreviewOptionsInternal = options;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SourceConnector.prototype.reconnect = function () {\n        this.reconnectDragSource();\n        this.reconnectDragPreview();\n    };\n    SourceConnector.prototype.reconnectDragSource = function () {\n        // if nothing has changed then don't resubscribe\n        var didChange = this.didHandlerIdChange() ||\n            this.didConnectedDragSourceChange() ||\n            this.didDragSourceOptionsChange();\n        if (didChange) {\n            this.disconnectDragSource();\n        }\n        var dragSource = this.dragSource;\n        if (!this.handlerId) {\n            return;\n        }\n        if (!dragSource) {\n            this.lastConnectedDragSource = dragSource;\n            return;\n        }\n        if (didChange) {\n            this.lastConnectedHandlerId = this.handlerId;\n            this.lastConnectedDragSource = dragSource;\n            this.lastConnectedDragSourceOptions = this.dragSourceOptions;\n            this.dragSourceUnsubscribe = this.backend.connectDragSource(this.handlerId, dragSource, this.dragSourceOptions);\n        }\n    };\n    SourceConnector.prototype.reconnectDragPreview = function () {\n        // if nothing has changed then don't resubscribe\n        var didChange = this.didHandlerIdChange() ||\n            this.didConnectedDragPreviewChange() ||\n            this.didDragPreviewOptionsChange();\n        if (didChange) {\n            this.disconnectDragPreview();\n        }\n        var dragPreview = this.dragPreview;\n        if (!this.handlerId || !dragPreview) {\n            return;\n        }\n        if (didChange) {\n            this.lastConnectedHandlerId = this.handlerId;\n            this.lastConnectedDragPreview = dragPreview;\n            this.lastConnectedDragPreviewOptions = this.dragPreviewOptions;\n            this.dragPreviewUnsubscribe = this.backend.connectDragPreview(this.handlerId, dragPreview, this.dragPreviewOptions);\n        }\n    };\n    SourceConnector.prototype.didHandlerIdChange = function () {\n        return this.lastConnectedHandlerId !== this.handlerId;\n    };\n    SourceConnector.prototype.didConnectedDragSourceChange = function () {\n        return this.lastConnectedDragSource !== this.dragSource;\n    };\n    SourceConnector.prototype.didConnectedDragPreviewChange = function () {\n        return this.lastConnectedDragPreview !== this.dragPreview;\n    };\n    SourceConnector.prototype.didDragSourceOptionsChange = function () {\n        return !shallowEqual(this.lastConnectedDragSourceOptions, this.dragSourceOptions);\n    };\n    SourceConnector.prototype.didDragPreviewOptionsChange = function () {\n        return !shallowEqual(this.lastConnectedDragPreviewOptions, this.dragPreviewOptions);\n    };\n    SourceConnector.prototype.disconnectDragSource = function () {\n        if (this.dragSourceUnsubscribe) {\n            this.dragSourceUnsubscribe();\n            this.dragSourceUnsubscribe = undefined;\n            this.dragPreviewNode = null;\n            this.dragPreviewRef = null;\n        }\n    };\n    SourceConnector.prototype.disconnectDragPreview = function () {\n        if (this.dragPreviewUnsubscribe) {\n            this.dragPreviewUnsubscribe();\n            this.dragPreviewUnsubscribe = undefined;\n            this.dragPreviewNode = null;\n            this.dragPreviewRef = null;\n        }\n    };\n    Object.defineProperty(SourceConnector.prototype, \"dragSource\", {\n        get: function () {\n            return (this.dragSourceNode || (this.dragSourceRef && this.dragSourceRef.current));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SourceConnector.prototype, \"dragPreview\", {\n        get: function () {\n            return (this.dragPreviewNode ||\n                (this.dragPreviewRef && this.dragPreviewRef.current));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SourceConnector;\n}());\nexports.default = SourceConnector;\n"]},"metadata":{},"sourceType":"script"}