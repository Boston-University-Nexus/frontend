{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = require(\"react\");\n\nvar registerSource_1 = require(\"../../registerSource\");\n\nvar useDragDropManager_1 = require(\"./useDragDropManager\");\n\nvar DragSourceMonitorImpl_1 = require(\"../../DragSourceMonitorImpl\");\n\nvar SourceConnector_1 = require(\"../../SourceConnector\");\n\nvar invariant = require('invariant');\n\nfunction useDragSourceMonitor() {\n  var manager = useDragDropManager_1.useDragDropManager();\n  var monitor = react_1.useMemo(function () {\n    return new DragSourceMonitorImpl_1.default(manager);\n  }, [manager]);\n  var connector = react_1.useMemo(function () {\n    return new SourceConnector_1.default(manager.getBackend());\n  }, [manager]);\n  return [monitor, connector];\n}\n\nexports.useDragSourceMonitor = useDragSourceMonitor;\n\nfunction useDragHandler(spec, monitor, connector) {\n  var manager = useDragDropManager_1.useDragDropManager(); // Can't use createSourceFactory, as semantics are different\n\n  var handler = react_1.useMemo(function () {\n    return {\n      beginDrag: function () {\n        var _a = spec.current,\n            begin = _a.begin,\n            item = _a.item;\n\n        if (begin) {\n          var beginResult = begin(monitor);\n          invariant(beginResult == null || typeof beginResult === 'object', 'dragSpec.begin() must either return an object, undefined, or null');\n          return beginResult || item || {};\n        }\n\n        return item || {};\n      },\n      canDrag: function () {\n        if (typeof spec.current.canDrag === 'boolean') {\n          return spec.current.canDrag;\n        } else if (typeof spec.current.canDrag === 'function') {\n          return spec.current.canDrag(monitor);\n        } else {\n          return true;\n        }\n      },\n      isDragging: function (globalMonitor, target) {\n        var isDragging = spec.current.isDragging;\n        return isDragging ? isDragging(monitor) : target === globalMonitor.getSourceId();\n      },\n      endDrag: function () {\n        var end = spec.current.end;\n\n        if (end) {\n          end(monitor.getItem(), monitor);\n        }\n\n        connector.reconnect();\n      }\n    };\n  }, []);\n  react_1.useEffect(function registerHandler() {\n    var _a = registerSource_1.default(spec.current.item.type, handler, manager),\n        handlerId = _a[0],\n        unregister = _a[1];\n\n    monitor.receiveHandlerId(handlerId);\n    connector.receiveHandlerId(handlerId);\n    return unregister;\n  }, []);\n}\n\nexports.useDragHandler = useDragHandler;","map":{"version":3,"sources":["/home/danielmelchor/Documents/CodeProjects/nexus/frontend/node_modules/react-dnd/lib/cjs/hooks/internal/drag.js"],"names":["Object","defineProperty","exports","value","react_1","require","registerSource_1","useDragDropManager_1","DragSourceMonitorImpl_1","SourceConnector_1","invariant","useDragSourceMonitor","manager","useDragDropManager","monitor","useMemo","default","connector","getBackend","useDragHandler","spec","handler","beginDrag","_a","current","begin","item","beginResult","canDrag","isDragging","globalMonitor","target","getSourceId","endDrag","end","getItem","reconnect","useEffect","registerHandler","type","handlerId","unregister","receiveHandlerId"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar registerSource_1 = require(\"../../registerSource\");\nvar useDragDropManager_1 = require(\"./useDragDropManager\");\nvar DragSourceMonitorImpl_1 = require(\"../../DragSourceMonitorImpl\");\nvar SourceConnector_1 = require(\"../../SourceConnector\");\nvar invariant = require('invariant');\nfunction useDragSourceMonitor() {\n    var manager = useDragDropManager_1.useDragDropManager();\n    var monitor = react_1.useMemo(function () { return new DragSourceMonitorImpl_1.default(manager); }, [manager]);\n    var connector = react_1.useMemo(function () { return new SourceConnector_1.default(manager.getBackend()); }, [\n        manager,\n    ]);\n    return [monitor, connector];\n}\nexports.useDragSourceMonitor = useDragSourceMonitor;\nfunction useDragHandler(spec, monitor, connector) {\n    var manager = useDragDropManager_1.useDragDropManager();\n    // Can't use createSourceFactory, as semantics are different\n    var handler = react_1.useMemo(function () {\n        return {\n            beginDrag: function () {\n                var _a = spec.current, begin = _a.begin, item = _a.item;\n                if (begin) {\n                    var beginResult = begin(monitor);\n                    invariant(beginResult == null || typeof beginResult === 'object', 'dragSpec.begin() must either return an object, undefined, or null');\n                    return beginResult || item || {};\n                }\n                return item || {};\n            },\n            canDrag: function () {\n                if (typeof spec.current.canDrag === 'boolean') {\n                    return spec.current.canDrag;\n                }\n                else if (typeof spec.current.canDrag === 'function') {\n                    return spec.current.canDrag(monitor);\n                }\n                else {\n                    return true;\n                }\n            },\n            isDragging: function (globalMonitor, target) {\n                var isDragging = spec.current.isDragging;\n                return isDragging\n                    ? isDragging(monitor)\n                    : target === globalMonitor.getSourceId();\n            },\n            endDrag: function () {\n                var end = spec.current.end;\n                if (end) {\n                    end(monitor.getItem(), monitor);\n                }\n                connector.reconnect();\n            },\n        };\n    }, []);\n    react_1.useEffect(function registerHandler() {\n        var _a = registerSource_1.default(spec.current.item.type, handler, manager), handlerId = _a[0], unregister = _a[1];\n        monitor.receiveHandlerId(handlerId);\n        connector.receiveHandlerId(handlerId);\n        return unregister;\n    }, []);\n}\nexports.useDragHandler = useDragHandler;\n"]},"metadata":{},"sourceType":"script"}