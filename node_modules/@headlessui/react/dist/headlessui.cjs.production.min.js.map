{"version":3,"file":"headlessui.cjs.production.min.js","sources":["../src/hooks/use-iso-morphic-effect.ts","../src/utils/render.ts","../src/components/transitions/utils/transition.ts","../src/hooks/use-id.ts","../src/hooks/use-is-initial-render.ts","../src/utils/match.ts","../src/utils/disposables.ts","../src/utils/once.ts","../src/components/transitions/transition.tsx","../src/hooks/use-is-mounted.ts","../src/components/keyboard.ts","../src/utils/calculate-active-index.ts","../src/components/menu/menu.tsx","../src/hooks/use-disposables.ts","../src/hooks/use-sync-refs.ts","../src/utils/resolve-prop-value.ts","../src/utils/bugs.ts","../src/components/listbox/listbox.tsx","../src/hooks/use-computed.ts","../src/components/switch/switch.tsx"],"sourcesContent":["import { useLayoutEffect, useEffect } from 'react'\n\nexport const useIsoMorphicEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect\n","import {\n  Fragment,\n  cloneElement,\n  createElement,\n  forwardRef,\n  isValidElement,\n\n  // Types\n  ElementType,\n  ReactElement,\n} from 'react'\nimport { Props, XOR, __, Expand } from '../types'\nimport { match } from './match'\n\nexport enum Features {\n  /** No features at all */\n  None = 0,\n\n  /**\n   * When used, this will allow us to use one of the render strategies.\n   *\n   * **The render strategies are:**\n   *    - **Unmount**   _(Will unmount the component.)_\n   *    - **Hidden**    _(Will hide the component using the [hidden] attribute.)_\n   */\n  RenderStrategy = 1,\n\n  /**\n   * When used, this will allow the user of our component to be in control. This can be used when\n   * you want to transition based on some state.\n   */\n  Static = 2,\n}\n\nexport enum RenderStrategy {\n  Unmount,\n  Hidden,\n}\n\ntype PropsForFeature<TPassedInFeatures extends Features, TForFeature extends Features, TProps> = {\n  [P in TPassedInFeatures]: P extends TForFeature ? TProps : __\n}[TPassedInFeatures]\n\nexport type PropsForFeatures<T extends Features> = XOR<\n  PropsForFeature<T, Features.Static, { static?: boolean }>,\n  PropsForFeature<T, Features.RenderStrategy, { unmount?: boolean }>\n>\n\nexport function render<TFeature extends Features, TTag extends ElementType, TBag>(\n  props: Expand<Props<TTag, TBag, any> & PropsForFeatures<TFeature>>,\n  propsBag: TBag,\n  defaultTag: ElementType,\n  features?: TFeature,\n  visible: boolean = true\n) {\n  // Visible always render\n  if (visible) return _render(props, propsBag, defaultTag)\n\n  let featureFlags = features ?? Features.None\n\n  if (featureFlags & Features.Static) {\n    let { static: isStatic = false, ...rest } = props as PropsForFeatures<Features.Static>\n\n    // When the `static` prop is passed as `true`, then the user is in control, thus we don't care about anything else\n    if (isStatic) return _render(rest, propsBag, defaultTag)\n  }\n\n  if (featureFlags & Features.RenderStrategy) {\n    let { unmount = true, ...rest } = props as PropsForFeatures<Features.RenderStrategy>\n    let strategy = unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden\n\n    return match(strategy, {\n      [RenderStrategy.Unmount]() {\n        return null\n      },\n      [RenderStrategy.Hidden]() {\n        return _render(\n          { ...rest, ...{ hidden: true, style: { display: 'none' } } },\n          propsBag,\n          defaultTag\n        )\n      },\n    })\n  }\n\n  // No features enabled, just render\n  return _render(props, propsBag, defaultTag)\n}\n\nfunction _render<TTag extends ElementType, TBag>(\n  props: Props<TTag, TBag> & { ref?: unknown },\n  bag: TBag,\n  tag: ElementType\n) {\n  let { as: Component = tag, children, refName = 'ref', ...passThroughProps } = omit(props, [\n    'unmount',\n    'static',\n  ])\n\n  // This allows us to use `<HeadlessUIComponent as={MyComopnent} refName=\"innerRef\" />`\n  let refRelatedProps = props.ref !== undefined ? { [refName]: props.ref } : {}\n\n  let resolvedChildren = (typeof children === 'function' ? children(bag) : children) as\n    | ReactElement\n    | ReactElement[]\n\n  if (Component === Fragment) {\n    if (Object.keys(passThroughProps).length > 0) {\n      if (Array.isArray(resolvedChildren) && resolvedChildren.length > 1) {\n        let err = new Error('You should only render 1 child')\n        if (Error.captureStackTrace) Error.captureStackTrace(err, _render)\n        throw err\n      }\n\n      if (!isValidElement(resolvedChildren)) {\n        let err = new Error(\n          `You should render an element as a child. Did you forget the as=\"...\" prop?`\n        )\n        if (Error.captureStackTrace) Error.captureStackTrace(err, _render)\n        throw err\n      }\n\n      return cloneElement(\n        resolvedChildren,\n        Object.assign(\n          {},\n          // Filter out undefined values so that they don't override the existing values\n          mergeEventFunctions(compact(omit(passThroughProps, ['ref'])), resolvedChildren.props, [\n            'onClick',\n          ]),\n          refRelatedProps\n        )\n      )\n    }\n  }\n\n  return createElement(\n    Component,\n    Object.assign({}, omit(passThroughProps, ['ref']), Component !== Fragment && refRelatedProps),\n    resolvedChildren\n  )\n}\n\n/**\n * We can use this function for the following useCase:\n *\n * <Menu.Item> <button onClick={console.log} /> </Menu.Item>\n *\n * Our `Menu.Item` will have an internal `onClick`, if you passthrough an `onClick` to the actual\n * `Menu.Item` component we will call it correctly. However, when we have an `onClick` on the actual\n * first child, that one should _also_ be called (but before this implementation, it was just\n * overriding the `onClick`). But it is only when we *render* that we have access to the existing\n * props of this component.\n *\n * It's a bit hacky, and not that clean, but it is something internal and we have tests to rely on\n * so that we can refactor this later (if needed).\n */\nfunction mergeEventFunctions(\n  passThroughProps: Record<string, any>,\n  existingProps: Record<string, any>,\n  functionsToMerge: string[]\n) {\n  let clone = Object.assign({}, passThroughProps)\n  for (let func of functionsToMerge) {\n    if (passThroughProps[func] !== undefined && existingProps[func] !== undefined) {\n      Object.assign(clone, {\n        [func](event: { defaultPrevented: boolean }) {\n          // Props we control\n          if (!event.defaultPrevented) passThroughProps[func](event)\n\n          // Existing props on the component\n          if (!event.defaultPrevented) existingProps[func](event)\n        },\n      })\n    }\n  }\n\n  return clone\n}\n\n/**\n * This is a hack, but basically we want to keep the full 'API' of the component, but we do want to\n * wrap it in a forwardRef so that we _can_ passthrough the ref\n */\nexport function forwardRefWithAs<T>(component: T): T {\n  return forwardRef((component as unknown) as any) as any\n}\n\nfunction compact<T extends Record<any, any>>(object: T) {\n  let clone = Object.assign({}, object)\n  for (let key in clone) {\n    if (clone[key] === undefined) delete clone[key]\n  }\n  return clone\n}\n\nfunction omit<T extends Record<any, any>>(object: T, keysToOmit: string[] = []) {\n  let clone = Object.assign({}, object)\n  for (let key of keysToOmit) {\n    if (key in clone) delete clone[key]\n  }\n  return clone\n}\n","import { once } from '../../../utils/once'\nimport { disposables } from '../../../utils/disposables'\n\nfunction addClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.add(...classes)\n}\n\nfunction removeClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.remove(...classes)\n}\n\nexport enum Reason {\n  Finished = 'finished',\n  Cancelled = 'cancelled',\n}\n\nfunction waitForTransition(node: HTMLElement, done: (reason: Reason) => void) {\n  let d = disposables()\n\n  if (!node) return d.dispose\n\n  // Safari returns a comma separated list of values, so let's sort them and take the highest value.\n  let { transitionDuration, transitionDelay } = getComputedStyle(node)\n\n  let [durationMs, delaysMs] = [transitionDuration, transitionDelay].map(value => {\n    let [resolvedValue = 0] = value\n      .split(',')\n      // Remove falseys we can't work with\n      .filter(Boolean)\n      // Values are returned as `0.3s` or `75ms`\n      .map(v => (v.includes('ms') ? parseFloat(v) : parseFloat(v) * 1000))\n      .sort((a, z) => z - a)\n\n    return resolvedValue\n  })\n\n  // Waiting for the transition to end. We could use the `transitionend` event, however when no\n  // actual transition/duration is defined then the `transitionend` event is not fired.\n  //\n  // TODO: Downside is, when you slow down transitions via devtools this timeout is still using the\n  // full 100% speed instead of the 25% or 10%.\n  if (durationMs !== 0) {\n    d.setTimeout(() => {\n      done(Reason.Finished)\n    }, durationMs + delaysMs)\n  } else {\n    // No transition is happening, so we should cleanup already. Otherwise we have to wait until we\n    // get disposed.\n    done(Reason.Finished)\n  }\n\n  // If we get disposed before the timeout runs we should cleanup anyway\n  d.add(() => done(Reason.Cancelled))\n\n  return d.dispose\n}\n\nexport function transition(\n  node: HTMLElement,\n  base: string[],\n  from: string[],\n  to: string[],\n  done?: (reason: Reason) => void\n) {\n  let d = disposables()\n  let _done = done !== undefined ? once(done) : () => {}\n\n  addClasses(node, ...base, ...from)\n\n  d.nextFrame(() => {\n    removeClasses(node, ...from)\n    addClasses(node, ...to)\n\n    d.add(\n      waitForTransition(node, reason => {\n        removeClasses(node, ...to, ...base)\n        return _done(reason)\n      })\n    )\n  })\n\n  // Once we get disposed, we should ensure that we cleanup after ourselves. In case of an unmount,\n  // the node itself will be nullified and will be a no-op. In case of a full transition the classes\n  // are already removed which is also a no-op. However if you go from enter -> leave mid-transition\n  // then we have some leftovers that should be cleaned.\n  d.add(() => removeClasses(node, ...base, ...from, ...to))\n\n  // When we get disposed early, than we should also call the done method but switch the reason.\n  d.add(() => _done(Reason.Cancelled))\n\n  return d.dispose\n}\n","import { useState, useEffect } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\n\n// We used a \"simple\" approach first which worked for SSR and rehydration on the client. However we\n// didn't take care of the Suspense case. To fix this we used the approach the @reach-ui/auto-id\n// uses.\n//\n// Credits: https://github.com/reach/reach-ui/blob/develop/packages/auto-id/src/index.tsx\n\nlet state = { serverHandoffComplete: false }\nlet id = 0\nfunction generateId() {\n  return ++id\n}\n\nexport function useId() {\n  let [id, setId] = useState(state.serverHandoffComplete ? generateId : null)\n\n  useIsoMorphicEffect(() => {\n    if (id === null) setId(generateId())\n  }, [id])\n\n  useEffect(() => {\n    if (state.serverHandoffComplete === false) state.serverHandoffComplete = true\n  }, [])\n\n  return id != null ? '' + id : undefined\n}\n","import { useRef, useEffect } from 'react'\n\nexport function useIsInitialRender() {\n  let initial = useRef(true)\n\n  useEffect(() => {\n    initial.current = false\n  }, [])\n\n  return initial.current\n}\n","export function match<TValue extends string | number = string, TReturnValue = unknown>(\n  value: TValue,\n  lookup: Record<TValue, TReturnValue | ((...args: any[]) => TReturnValue)>,\n  ...args: any[]\n): TReturnValue {\n  if (value in lookup) {\n    let returnValue = lookup[value]\n    return typeof returnValue === 'function' ? returnValue(...args) : returnValue\n  }\n\n  let error = new Error(\n    `Tried to handle \"${value}\" but there is no handler defined. Only defined handlers are: ${Object.keys(\n      lookup\n    )\n      .map(key => `\"${key}\"`)\n      .join(', ')}.`\n  )\n  if (Error.captureStackTrace) Error.captureStackTrace(error, match)\n  throw error\n}\n","export function disposables() {\n  let disposables: Function[] = []\n\n  let api = {\n    requestAnimationFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      let raf = requestAnimationFrame(...args)\n      api.add(() => cancelAnimationFrame(raf))\n    },\n\n    nextFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      api.requestAnimationFrame(() => {\n        api.requestAnimationFrame(...args)\n      })\n    },\n\n    setTimeout(...args: Parameters<typeof setTimeout>) {\n      let timer = setTimeout(...args)\n      api.add(() => clearTimeout(timer))\n    },\n\n    add(cb: () => void) {\n      disposables.push(cb)\n    },\n\n    dispose() {\n      for (let dispose of disposables.splice(0)) {\n        dispose()\n      }\n    },\n  }\n\n  return api\n}\n","export function once<T>(cb: (...args: T[]) => void) {\n  let state = { called: false }\n\n  return (...args: T[]) => {\n    if (state.called) return\n    state.called = true\n    return cb(...args)\n  }\n}\n","import React, {\n  useMemo,\n  createContext,\n  useContext,\n  useRef,\n  useEffect,\n  useCallback,\n  useState,\n  Fragment,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n} from 'react'\nimport { Props } from '../../types'\n\nimport { useId } from '../../hooks/use-id'\nimport { useIsInitialRender } from '../../hooks/use-is-initial-render'\nimport { match } from '../../utils/match'\nimport { useIsMounted } from '../../hooks/use-is-mounted'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\n\nimport { Features, PropsForFeatures, render, RenderStrategy } from '../../utils/render'\nimport { Reason, transition } from './utils/transition'\n\ntype ID = ReturnType<typeof useId>\n\nfunction useSplitClasses(classes: string = '') {\n  return useMemo(() => classes.split(' ').filter(className => className.trim().length > 1), [\n    classes,\n  ])\n}\n\ninterface TransitionContextValues {\n  show: boolean\n  appear: boolean\n}\nlet TransitionContext = createContext<TransitionContextValues | null>(null)\nTransitionContext.displayName = 'TransitionContext'\n\nenum TreeStates {\n  Visible = 'visible',\n  Hidden = 'hidden',\n}\n\nexport interface TransitionClasses {\n  enter?: string\n  enterFrom?: string\n  enterTo?: string\n  leave?: string\n  leaveFrom?: string\n  leaveTo?: string\n}\n\nexport interface TransitionEvents {\n  beforeEnter?: () => void\n  afterEnter?: () => void\n  beforeLeave?: () => void\n  afterLeave?: () => void\n}\n\ntype TransitionChildProps<TTag> = Props<TTag, TransitionChildRenderPropArg> &\n  PropsForFeatures<typeof TransitionChildRenderFeatures> &\n  TransitionClasses &\n  TransitionEvents & { appear?: boolean }\n\nfunction useTransitionContext() {\n  let context = useContext(TransitionContext)\n\n  if (context === null) {\n    throw new Error('A <Transition.Child /> is used but it is missing a parent <Transition />.')\n  }\n\n  return context\n}\n\nfunction useParentNesting() {\n  let context = useContext(NestingContext)\n\n  if (context === null) {\n    throw new Error('A <Transition.Child /> is used but it is missing a parent <Transition />.')\n  }\n\n  return context\n}\n\ninterface NestingContextValues {\n  children: MutableRefObject<{ id: ID; state: TreeStates }[]>\n  register: (id: ID) => () => void\n  unregister: (id: ID, strategy?: RenderStrategy) => void\n}\n\nlet NestingContext = createContext<NestingContextValues | null>(null)\nNestingContext.displayName = 'NestingContext'\n\nfunction hasChildren(\n  bag: NestingContextValues['children'] | { children: NestingContextValues['children'] }\n): boolean {\n  if ('children' in bag) return hasChildren(bag.children)\n  return bag.current.filter(({ state }) => state === TreeStates.Visible).length > 0\n}\n\nfunction useNesting(done?: () => void) {\n  let doneRef = useRef(done)\n  let transitionableChildren = useRef<NestingContextValues['children']['current']>([])\n  let mounted = useIsMounted()\n\n  useEffect(() => {\n    doneRef.current = done\n  }, [done])\n\n  let unregister = useCallback(\n    (childId: ID, strategy = RenderStrategy.Hidden) => {\n      let idx = transitionableChildren.current.findIndex(({ id }) => id === childId)\n      if (idx === -1) return\n\n      match(strategy, {\n        [RenderStrategy.Unmount]() {\n          transitionableChildren.current.splice(idx, 1)\n        },\n        [RenderStrategy.Hidden]() {\n          transitionableChildren.current[idx].state = TreeStates.Hidden\n        },\n      })\n\n      if (!hasChildren(transitionableChildren) && mounted.current) {\n        doneRef.current?.()\n      }\n    },\n    [doneRef, mounted, transitionableChildren]\n  )\n\n  let register = useCallback(\n    (childId: ID) => {\n      let child = transitionableChildren.current.find(({ id }) => id === childId)\n      if (!child) {\n        transitionableChildren.current.push({ id: childId, state: TreeStates.Visible })\n      } else if (child.state !== TreeStates.Visible) {\n        child.state = TreeStates.Visible\n      }\n\n      return () => unregister(childId, RenderStrategy.Unmount)\n    },\n    [transitionableChildren, unregister]\n  )\n\n  return useMemo(\n    () => ({\n      children: transitionableChildren,\n      register,\n      unregister,\n    }),\n    [register, unregister, transitionableChildren]\n  )\n}\n\nfunction noop() {}\nlet eventNames: (keyof TransitionEvents)[] = [\n  'beforeEnter',\n  'afterEnter',\n  'beforeLeave',\n  'afterLeave',\n]\nfunction ensureEventHooksExist(events: TransitionEvents) {\n  return eventNames.reduce((all, eventName) => {\n    all[eventName] = events[eventName] || noop\n    return all\n  }, {} as Record<keyof TransitionEvents, () => void>)\n}\n\nfunction useEvents(events: TransitionEvents) {\n  let eventsRef = useRef(ensureEventHooksExist(events))\n\n  useEffect(() => {\n    eventsRef.current = ensureEventHooksExist(events)\n  }, [events])\n\n  return eventsRef\n}\n\n// ---\n\nlet DEFAULT_TRANSITION_CHILD_TAG = 'div' as const\ntype TransitionChildRenderPropArg = MutableRefObject<HTMLDivElement>\nlet TransitionChildRenderFeatures = Features.RenderStrategy\n\nfunction TransitionChild<TTag extends ElementType = typeof DEFAULT_TRANSITION_CHILD_TAG>(\n  props: TransitionChildProps<TTag>\n) {\n  let {\n    // Event \"handlers\"\n    beforeEnter,\n    afterEnter,\n    beforeLeave,\n    afterLeave,\n\n    // Class names\n    enter,\n    enterFrom,\n    enterTo,\n    leave,\n    leaveFrom,\n    leaveTo,\n\n    // @ts-expect-error\n    ...rest\n  } = props as typeof props\n  let container = useRef<HTMLElement | null>(null)\n  let [state, setState] = useState(TreeStates.Visible)\n  let strategy = rest.unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden\n\n  let { show, appear } = useTransitionContext()\n  let { register, unregister } = useParentNesting()\n\n  let initial = useIsInitialRender()\n  let id = useId()\n\n  let isTransitioning = useRef(false)\n\n  let nesting = useNesting(() => {\n    // When all children have been unmounted we can only hide ourselves if and only if we are not\n    // transitioning ourserlves. Otherwise we would unmount before the transitions are finished.\n    if (!isTransitioning.current) {\n      setState(TreeStates.Hidden)\n      unregister(id)\n      events.current.afterLeave()\n    }\n  })\n\n  useIsoMorphicEffect(() => {\n    if (!id) return\n    return register(id)\n  }, [register, id])\n\n  useIsoMorphicEffect(() => {\n    // If we are in another mode than the Hidden mode then ignore\n    if (strategy !== RenderStrategy.Hidden) return\n    if (!id) return\n\n    // Make sure that we are visible\n    if (show && state !== TreeStates.Visible) {\n      setState(TreeStates.Visible)\n      return\n    }\n\n    match(state, {\n      [TreeStates.Hidden]: () => unregister(id),\n      [TreeStates.Visible]: () => register(id),\n    })\n  }, [state, id, register, unregister, show, strategy])\n\n  let enterClasses = useSplitClasses(enter)\n  let enterFromClasses = useSplitClasses(enterFrom)\n  let enterToClasses = useSplitClasses(enterTo)\n\n  let leaveClasses = useSplitClasses(leave)\n  let leaveFromClasses = useSplitClasses(leaveFrom)\n  let leaveToClasses = useSplitClasses(leaveTo)\n\n  let events = useEvents({ beforeEnter, afterEnter, beforeLeave, afterLeave })\n\n  useEffect(() => {\n    if (state === TreeStates.Visible && container.current === null) {\n      throw new Error('Did you forget to passthrough the `ref` to the actual DOM node?')\n    }\n  }, [container, state])\n\n  // Skipping initial transition\n  let skip = initial && !appear\n\n  useIsoMorphicEffect(() => {\n    let node = container.current\n    if (!node) return\n    if (skip) return\n\n    isTransitioning.current = true\n\n    if (show) events.current.beforeEnter()\n    if (!show) events.current.beforeLeave()\n\n    return show\n      ? transition(node, enterClasses, enterFromClasses, enterToClasses, reason => {\n          isTransitioning.current = false\n          if (reason === Reason.Finished) events.current.afterEnter()\n        })\n      : transition(node, leaveClasses, leaveFromClasses, leaveToClasses, reason => {\n          isTransitioning.current = false\n\n          if (reason !== Reason.Finished) return\n\n          // When we don't have children anymore we can safely unregister from the parent and hide\n          // ourselves.\n          if (!hasChildren(nesting)) {\n            setState(TreeStates.Hidden)\n            unregister(id)\n            events.current.afterLeave()\n          }\n        })\n  }, [\n    events,\n    id,\n    isTransitioning,\n    unregister,\n    nesting,\n    container,\n    skip,\n    show,\n    enterClasses,\n    enterFromClasses,\n    enterToClasses,\n    leaveClasses,\n    leaveFromClasses,\n    leaveToClasses,\n  ])\n\n  let propsBag = {}\n  let propsWeControl = { ref: container }\n  let passthroughProps = rest\n\n  return (\n    <NestingContext.Provider value={nesting}>\n      {render(\n        { ...passthroughProps, ...propsWeControl },\n        propsBag,\n        DEFAULT_TRANSITION_CHILD_TAG,\n        TransitionChildRenderFeatures,\n        state === TreeStates.Visible\n      )}\n    </NestingContext.Provider>\n  )\n}\n\nexport function Transition<TTag extends ElementType = typeof DEFAULT_TRANSITION_CHILD_TAG>(\n  props: TransitionChildProps<TTag> & { show: boolean; appear?: boolean }\n) {\n  // @ts-expect-error\n  let { show, appear = false, unmount, ...passthroughProps } = props as typeof props\n\n  if (![true, false].includes(show)) {\n    throw new Error('A <Transition /> is used but it is missing a `show={true | false}` prop.')\n  }\n\n  let [state, setState] = useState(show ? TreeStates.Visible : TreeStates.Hidden)\n\n  let nestingBag = useNesting(() => {\n    setState(TreeStates.Hidden)\n  })\n\n  let initial = useIsInitialRender()\n  let transitionBag = useMemo<TransitionContextValues>(\n    () => ({ show, appear: appear || !initial }),\n    [show, appear, initial]\n  )\n\n  useEffect(() => {\n    if (show) {\n      setState(TreeStates.Visible)\n    } else if (!hasChildren(nestingBag)) {\n      setState(TreeStates.Hidden)\n    }\n  }, [show, nestingBag])\n\n  let sharedProps = { unmount }\n  let propsBag = {}\n\n  return (\n    <NestingContext.Provider value={nestingBag}>\n      <TransitionContext.Provider value={transitionBag}>\n        {render(\n          {\n            ...sharedProps,\n            as: Fragment,\n            children: <TransitionChild {...sharedProps} {...passthroughProps} />,\n          },\n          propsBag,\n          Fragment,\n          TransitionChildRenderFeatures,\n          state === TreeStates.Visible\n        )}\n      </TransitionContext.Provider>\n    </NestingContext.Provider>\n  )\n}\n\nTransition.Child = TransitionChild\n","import { useRef, useEffect } from 'react'\n\nexport function useIsMounted() {\n  let mounted = useRef(true)\n\n  useEffect(() => {\n    return () => {\n      mounted.current = false\n    }\n  }, [])\n\n  return mounted\n}\n","// TODO: This must already exist somewhere, right? 🤔\n// Ref: https://www.w3.org/TR/uievents-key/#named-key-attribute-values\nexport enum Keys {\n  Space = ' ',\n  Enter = 'Enter',\n  Escape = 'Escape',\n  Backspace = 'Backspace',\n\n  ArrowUp = 'ArrowUp',\n  ArrowDown = 'ArrowDown',\n\n  Home = 'Home',\n  End = 'End',\n\n  PageUp = 'PageUp',\n  PageDown = 'PageDown',\n\n  Tab = 'Tab',\n}\n","function assertNever(x: never): never {\n  throw new Error('Unexpected object: ' + x)\n}\n\nexport enum Focus {\n  /** Focus the first non-disabled item. */\n  First,\n\n  /** Focus the previous non-disabled item. */\n  Previous,\n\n  /** Focus the next non-disabled item. */\n  Next,\n\n  /** Focus the last non-disabled item. */\n  Last,\n\n  /** Focus a specific item based on the `id` of the item. */\n  Specific,\n\n  /** Focus no items at all. */\n  Nothing,\n}\n\nexport function calculateActiveIndex<TItem>(\n  action: { focus: Focus.Specific; id: string } | { focus: Exclude<Focus, Focus.Specific> },\n  resolvers: {\n    resolveItems(): TItem[]\n    resolveActiveIndex(): number | null\n    resolveId(item: TItem): string\n    resolveDisabled(item: TItem): boolean\n  }\n) {\n  let items = resolvers.resolveItems()\n  if (items.length <= 0) return null\n\n  let currentActiveIndex = resolvers.resolveActiveIndex()\n  let activeIndex = currentActiveIndex ?? -1\n\n  let nextActiveIndex = (() => {\n    switch (action.focus) {\n      case Focus.First:\n        return items.findIndex(item => !resolvers.resolveDisabled(item))\n\n      case Focus.Previous: {\n        let idx = items\n          .slice()\n          .reverse()\n          .findIndex((item, idx, all) => {\n            if (activeIndex !== -1 && all.length - idx - 1 >= activeIndex) return false\n            return !resolvers.resolveDisabled(item)\n          })\n        if (idx === -1) return idx\n        return items.length - 1 - idx\n      }\n\n      case Focus.Next:\n        return items.findIndex((item, idx) => {\n          if (idx <= activeIndex) return false\n          return !resolvers.resolveDisabled(item)\n        })\n\n      case Focus.Last: {\n        let idx = items\n          .slice()\n          .reverse()\n          .findIndex(item => !resolvers.resolveDisabled(item))\n        if (idx === -1) return idx\n        return items.length - 1 - idx\n      }\n\n      case Focus.Specific:\n        return items.findIndex(item => resolvers.resolveId(item) === action.id)\n\n      case Focus.Nothing:\n        return null\n\n      default:\n        assertNever(action)\n    }\n  })()\n\n  return nextActiveIndex === -1 ? currentActiveIndex : nextActiveIndex\n}\n","// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton\nimport React, {\n  createContext,\n  createRef,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  Fragment,\n\n  // Types\n  Dispatch,\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n  MutableRefObject,\n  Ref,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { match } from '../../utils/match'\nimport { forwardRefWithAs, render, Features, PropsForFeatures } from '../../utils/render'\nimport { disposables } from '../../utils/disposables'\nimport { useDisposables } from '../../hooks/use-disposables'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../keyboard'\nimport { Focus, calculateActiveIndex } from '../../utils/calculate-active-index'\nimport { resolvePropValue } from '../../utils/resolve-prop-value'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\n\nenum MenuStates {\n  Open,\n  Closed,\n}\n\ntype MenuItemDataRef = MutableRefObject<{ textValue?: string; disabled: boolean }>\n\ninterface StateDefinition {\n  menuState: MenuStates\n  buttonRef: MutableRefObject<HTMLButtonElement | null>\n  itemsRef: MutableRefObject<HTMLDivElement | null>\n  items: { id: string; dataRef: MenuItemDataRef }[]\n  searchQuery: string\n  activeItemIndex: number | null\n}\n\nenum ActionTypes {\n  OpenMenu,\n  CloseMenu,\n\n  GoToItem,\n  Search,\n  ClearSearch,\n\n  RegisterItem,\n  UnregisterItem,\n}\n\ntype Actions =\n  | { type: ActionTypes.CloseMenu }\n  | { type: ActionTypes.OpenMenu }\n  | { type: ActionTypes.GoToItem; focus: Focus.Specific; id: string }\n  | { type: ActionTypes.GoToItem; focus: Exclude<Focus, Focus.Specific> }\n  | { type: ActionTypes.Search; value: string }\n  | { type: ActionTypes.ClearSearch }\n  | { type: ActionTypes.RegisterItem; id: string; dataRef: MenuItemDataRef }\n  | { type: ActionTypes.UnregisterItem; id: string }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.CloseMenu]: state => ({\n    ...state,\n    activeItemIndex: null,\n    menuState: MenuStates.Closed,\n  }),\n  [ActionTypes.OpenMenu]: state => ({ ...state, menuState: MenuStates.Open }),\n  [ActionTypes.GoToItem]: (state, action) => {\n    let activeItemIndex = calculateActiveIndex(action, {\n      resolveItems: () => state.items,\n      resolveActiveIndex: () => state.activeItemIndex,\n      resolveId: item => item.id,\n      resolveDisabled: item => item.dataRef.current.disabled,\n    })\n\n    if (state.searchQuery === '' && state.activeItemIndex === activeItemIndex) return state\n    return { ...state, searchQuery: '', activeItemIndex }\n  },\n  [ActionTypes.Search]: (state, action) => {\n    let searchQuery = state.searchQuery + action.value\n    let match = state.items.findIndex(\n      item =>\n        item.dataRef.current.textValue?.startsWith(searchQuery) && !item.dataRef.current.disabled\n    )\n\n    if (match === -1 || match === state.activeItemIndex) return { ...state, searchQuery }\n    return { ...state, searchQuery, activeItemIndex: match }\n  },\n  [ActionTypes.ClearSearch]: state => ({ ...state, searchQuery: '' }),\n  [ActionTypes.RegisterItem]: (state, action) => ({\n    ...state,\n    items: [...state.items, { id: action.id, dataRef: action.dataRef }],\n  }),\n  [ActionTypes.UnregisterItem]: (state, action) => {\n    let nextItems = state.items.slice()\n    let currentActiveItem = state.activeItemIndex !== null ? nextItems[state.activeItemIndex] : null\n\n    let idx = nextItems.findIndex(a => a.id === action.id)\n\n    if (idx !== -1) nextItems.splice(idx, 1)\n\n    return {\n      ...state,\n      items: nextItems,\n      activeItemIndex: (() => {\n        if (idx === state.activeItemIndex) return null\n        if (currentActiveItem === null) return null\n\n        // If we removed the item before the actual active index, then it would be out of sync. To\n        // fix this, we will find the correct (new) index position.\n        return nextItems.indexOf(currentActiveItem)\n      })(),\n    }\n  },\n}\n\nlet MenuContext = createContext<[StateDefinition, Dispatch<Actions>] | null>(null)\nMenuContext.displayName = 'MenuContext'\n\nfunction useMenuContext(component: string) {\n  let context = useContext(MenuContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Menu.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useMenuContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_MENU_TAG = Fragment\ninterface MenuRenderPropArg {\n  open: boolean\n}\n\nexport function Menu<TTag extends ElementType = typeof DEFAULT_MENU_TAG>(\n  props: Props<TTag, MenuRenderPropArg>\n) {\n  let reducerBag = useReducer(stateReducer, {\n    menuState: MenuStates.Closed,\n    buttonRef: createRef(),\n    itemsRef: createRef(),\n    items: [],\n    searchQuery: '',\n    activeItemIndex: null,\n  } as StateDefinition)\n  let [{ menuState, itemsRef, buttonRef }, dispatch] = reducerBag\n\n  useEffect(() => {\n    function handler(event: MouseEvent) {\n      let target = event.target as HTMLElement\n      let active = document.activeElement\n\n      if (menuState !== MenuStates.Open) return\n      if (buttonRef.current?.contains(target)) return\n\n      if (!itemsRef.current?.contains(target)) dispatch({ type: ActionTypes.CloseMenu })\n      if (active !== document.body && active?.contains(target)) return // Keep focus on newly clicked/focused element\n      if (!event.defaultPrevented) buttonRef.current?.focus({ preventScroll: true })\n    }\n\n    window.addEventListener('mousedown', handler)\n    return () => window.removeEventListener('mousedown', handler)\n  }, [menuState, itemsRef, buttonRef, dispatch])\n\n  let propsBag = useMemo(() => ({ open: menuState === MenuStates.Open }), [menuState])\n\n  return (\n    <MenuContext.Provider value={reducerBag}>\n      {render(props, propsBag, DEFAULT_MENU_TAG)}\n    </MenuContext.Provider>\n  )\n}\n\n// ---\n\nlet DEFAULT_BUTTON_TAG = 'button' as const\ninterface ButtonRenderPropArg {\n  open: boolean\n}\ntype ButtonPropsWeControl =\n  | 'id'\n  | 'type'\n  | 'aria-haspopup'\n  | 'aria-controls'\n  | 'aria-expanded'\n  | 'onKeyDown'\n  | 'onClick'\n\nlet Button = forwardRefWithAs(function Button<TTag extends ElementType = typeof DEFAULT_BUTTON_TAG>(\n  props: Props<TTag, ButtonRenderPropArg, ButtonPropsWeControl>,\n  ref: Ref<HTMLButtonElement>\n) {\n  let [state, dispatch] = useMenuContext([Menu.name, Button.name].join('.'))\n  let buttonRef = useSyncRefs(state.buttonRef, ref)\n\n  let id = `headlessui-menu-button-${useId()}`\n  let d = useDisposables()\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n\n        case Keys.Space:\n        case Keys.Enter:\n        case Keys.ArrowDown:\n          event.preventDefault()\n          dispatch({ type: ActionTypes.OpenMenu })\n          d.nextFrame(() => {\n            state.itemsRef.current?.focus({ preventScroll: true })\n            dispatch({ type: ActionTypes.GoToItem, focus: Focus.First })\n          })\n          break\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          dispatch({ type: ActionTypes.OpenMenu })\n          d.nextFrame(() => {\n            state.itemsRef.current?.focus({ preventScroll: true })\n            dispatch({ type: ActionTypes.GoToItem, focus: Focus.Last })\n          })\n          break\n      }\n    },\n    [dispatch, state, d]\n  )\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      if (props.disabled) return\n      if (state.menuState === MenuStates.Open) {\n        dispatch({ type: ActionTypes.CloseMenu })\n        d.nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n      } else {\n        event.preventDefault()\n        dispatch({ type: ActionTypes.OpenMenu })\n        d.nextFrame(() => state.itemsRef.current?.focus({ preventScroll: true }))\n      }\n    },\n    [dispatch, d, state, props.disabled]\n  )\n\n  let propsBag = useMemo(() => ({ open: state.menuState === MenuStates.Open }), [state])\n  let passthroughProps = props\n  let propsWeControl = {\n    ref: buttonRef,\n    id,\n    type: 'button',\n    'aria-haspopup': true,\n    'aria-controls': state.itemsRef.current?.id,\n    'aria-expanded': state.menuState === MenuStates.Open ? true : undefined,\n    onKeyDown: handleKeyDown,\n    onClick: handleClick,\n  }\n\n  return render({ ...passthroughProps, ...propsWeControl }, propsBag, DEFAULT_BUTTON_TAG)\n})\n\n// ---\n\nlet DEFAULT_ITEMS_TAG = 'div' as const\ninterface ItemsRenderPropArg {\n  open: boolean\n}\ntype ItemsPropsWeControl =\n  | 'aria-activedescendant'\n  | 'aria-labelledby'\n  | 'id'\n  | 'onKeyDown'\n  | 'role'\n  | 'tabIndex'\n\nlet ItemsRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet Items = forwardRefWithAs(function Items<TTag extends ElementType = typeof DEFAULT_ITEMS_TAG>(\n  props: Props<TTag, ItemsRenderPropArg, ItemsPropsWeControl> &\n    PropsForFeatures<typeof ItemsRenderFeatures>,\n  ref: Ref<HTMLDivElement>\n) {\n  let [state, dispatch] = useMenuContext([Menu.name, Items.name].join('.'))\n  let itemsRef = useSyncRefs(state.itemsRef, ref)\n\n  let id = `headlessui-menu-items-${useId()}`\n  let searchDisposables = useDisposables()\n\n  useIsoMorphicEffect(() => {\n    let container = state.itemsRef.current\n    if (!container) return\n    if (state.menuState !== MenuStates.Open) return\n\n    let walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n      acceptNode(node: HTMLElement) {\n        if (node.getAttribute('role') === 'menuitem') return NodeFilter.FILTER_REJECT\n        if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n        return NodeFilter.FILTER_ACCEPT\n      },\n    })\n\n    while (walker.nextNode()) {\n      ;(walker.currentNode as HTMLElement).setAttribute('role', 'none')\n    }\n  })\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLDivElement>) => {\n      searchDisposables.dispose()\n\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n\n        // @ts-expect-error Fallthrough is expected here\n        case Keys.Space:\n          if (state.searchQuery !== '') {\n            event.preventDefault()\n            return dispatch({ type: ActionTypes.Search, value: event.key })\n          }\n        // When in type ahead mode, fallthrough\n        case Keys.Enter:\n          event.preventDefault()\n          dispatch({ type: ActionTypes.CloseMenu })\n          if (state.activeItemIndex !== null) {\n            let { id } = state.items[state.activeItemIndex]\n            document.getElementById(id)?.click()\n          }\n          disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n          break\n\n        case Keys.ArrowDown:\n          event.preventDefault()\n          return dispatch({ type: ActionTypes.GoToItem, focus: Focus.Next })\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          return dispatch({ type: ActionTypes.GoToItem, focus: Focus.Previous })\n\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          return dispatch({ type: ActionTypes.GoToItem, focus: Focus.First })\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          return dispatch({ type: ActionTypes.GoToItem, focus: Focus.Last })\n\n        case Keys.Escape:\n          event.preventDefault()\n          dispatch({ type: ActionTypes.CloseMenu })\n          disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n          break\n\n        case Keys.Tab:\n          return event.preventDefault()\n\n        default:\n          if (event.key.length === 1) {\n            dispatch({ type: ActionTypes.Search, value: event.key })\n            searchDisposables.setTimeout(() => dispatch({ type: ActionTypes.ClearSearch }), 350)\n          }\n          break\n      }\n    },\n    [dispatch, searchDisposables, state]\n  )\n\n  let propsBag = useMemo(() => ({ open: state.menuState === MenuStates.Open }), [state])\n  let propsWeControl = {\n    'aria-activedescendant':\n      state.activeItemIndex === null ? undefined : state.items[state.activeItemIndex]?.id,\n    'aria-labelledby': state.buttonRef.current?.id,\n    id,\n    onKeyDown: handleKeyDown,\n    role: 'menu',\n    tabIndex: 0,\n    ref: itemsRef,\n  }\n  let passthroughProps = props\n\n  return render(\n    { ...passthroughProps, ...propsWeControl },\n    propsBag,\n    DEFAULT_ITEMS_TAG,\n    ItemsRenderFeatures,\n    state.menuState === MenuStates.Open\n  )\n})\n\n// ---\n\nlet DEFAULT_ITEM_TAG = Fragment\ninterface ItemRenderPropArg {\n  active: boolean\n  disabled: boolean\n}\ntype MenuItemPropsWeControl =\n  | 'id'\n  | 'role'\n  | 'tabIndex'\n  | 'aria-disabled'\n  | 'onPointerLeave'\n  | 'onPointerMove'\n  | 'onMouseLeave'\n  | 'onMouseMove'\n  | 'onFocus'\n\nfunction Item<TTag extends ElementType = typeof DEFAULT_ITEM_TAG>(\n  props: Props<TTag, ItemRenderPropArg, MenuItemPropsWeControl | 'className'> & {\n    disabled?: boolean\n    onClick?: (event: { preventDefault: Function }) => void\n\n    // Special treatment, can either be a string or a function that resolves to a string\n    className?: ((bag: ItemRenderPropArg) => string) | string\n  }\n) {\n  let { disabled = false, className, onClick, ...passthroughProps } = props\n  let [state, dispatch] = useMenuContext([Menu.name, Item.name].join('.'))\n  let id = `headlessui-menu-item-${useId()}`\n  let active = state.activeItemIndex !== null ? state.items[state.activeItemIndex].id === id : false\n\n  useIsoMorphicEffect(() => {\n    if (state.menuState !== MenuStates.Open) return\n    if (!active) return\n    let d = disposables()\n    d.nextFrame(() => document.getElementById(id)?.scrollIntoView?.({ block: 'nearest' }))\n    return d.dispose\n  }, [id, active, state.menuState])\n\n  let bag = useRef<MenuItemDataRef['current']>({ disabled })\n\n  useIsoMorphicEffect(() => {\n    bag.current.disabled = disabled\n  }, [bag, disabled])\n\n  useIsoMorphicEffect(() => {\n    bag.current.textValue = document.getElementById(id)?.textContent?.toLowerCase()\n  }, [bag, id])\n\n  useIsoMorphicEffect(() => {\n    dispatch({ type: ActionTypes.RegisterItem, id, dataRef: bag })\n    return () => dispatch({ type: ActionTypes.UnregisterItem, id })\n  }, [bag, id])\n\n  let handleClick = useCallback(\n    (event: MouseEvent) => {\n      if (disabled) return event.preventDefault()\n      dispatch({ type: ActionTypes.CloseMenu })\n      disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n      if (onClick) return onClick(event)\n    },\n    [dispatch, state.buttonRef, disabled, onClick]\n  )\n\n  let handleFocus = useCallback(() => {\n    if (disabled) return dispatch({ type: ActionTypes.GoToItem, focus: Focus.Nothing })\n    dispatch({ type: ActionTypes.GoToItem, focus: Focus.Specific, id })\n  }, [disabled, id, dispatch])\n\n  let handleMove = useCallback(() => {\n    if (disabled) return\n    if (active) return\n    dispatch({ type: ActionTypes.GoToItem, focus: Focus.Specific, id })\n  }, [disabled, active, id, dispatch])\n\n  let handleLeave = useCallback(() => {\n    if (disabled) return\n    if (!active) return\n    dispatch({ type: ActionTypes.GoToItem, focus: Focus.Nothing })\n  }, [disabled, active, dispatch])\n\n  let propsBag = useMemo(() => ({ active, disabled }), [active, disabled])\n  let propsWeControl = {\n    id,\n    role: 'menuitem',\n    tabIndex: -1,\n    className: resolvePropValue(className, propsBag),\n    'aria-disabled': disabled === true ? true : undefined,\n    onClick: handleClick,\n    onFocus: handleFocus,\n    onPointerMove: handleMove,\n    onMouseMove: handleMove,\n    onPointerLeave: handleLeave,\n    onMouseLeave: handleLeave,\n  }\n\n  return render({ ...passthroughProps, ...propsWeControl }, propsBag, DEFAULT_ITEM_TAG)\n}\n\n// ---\n\nMenu.Button = Button\nMenu.Items = Items\nMenu.Item = Item\n","import { useState, useEffect } from 'react'\n\nimport { disposables } from '../utils/disposables'\n\nexport function useDisposables() {\n  // Using useState instead of useRef so that we can use the initializer function.\n  let [d] = useState(disposables)\n  useEffect(() => () => d.dispose(), [d])\n  return d\n}\n","import { useCallback } from 'react'\n\nexport function useSyncRefs<TType>(\n  ...refs: (React.MutableRefObject<TType> | ((instance: TType) => void) | null)[]\n) {\n  return useCallback(\n    (value: TType) => {\n      refs.forEach(ref => {\n        if (ref === null) return\n        if (typeof ref === 'function') return ref(value)\n        ref.current = value\n      })\n    },\n    [refs]\n  )\n}\n","export function resolvePropValue<TProperty, TBag>(property: TProperty, bag: TBag) {\n  if (property === undefined) return undefined\n  if (typeof property === 'function') return property(bag)\n  return property\n}\n","// See: https://github.com/facebook/react/issues/7711\n// See: https://github.com/facebook/react/pull/20612\n// See: https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#concept-fe-disabled (2.)\nexport function isDisabledReactIssue7711(element: Element): boolean {\n  let parent = element.parentElement\n  let legend = null\n\n  while (parent && !(parent instanceof HTMLFieldSetElement)) {\n    if (parent instanceof HTMLLegendElement) legend = parent\n    parent = parent.parentElement\n  }\n\n  let isParentDisabled = parent?.getAttribute('disabled') === '' ?? false\n  if (isParentDisabled && isFirstLegend(legend)) return false\n\n  return isParentDisabled\n}\n\nfunction isFirstLegend(element: HTMLLegendElement | null): boolean {\n  if (!element) return false\n\n  let previous = element.previousElementSibling\n\n  while (previous !== null) {\n    if (previous instanceof HTMLLegendElement) return false\n    previous = previous.previousElementSibling\n  }\n\n  return true\n}\n","import React, {\n  createContext,\n  createRef,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  Fragment,\n\n  // Types\n  Dispatch,\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n  MutableRefObject,\n  Ref,\n} from 'react'\n\nimport { useDisposables } from '../../hooks/use-disposables'\nimport { useId } from '../../hooks/use-id'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { useComputed } from '../../hooks/use-computed'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { Props } from '../../types'\nimport { Features, forwardRefWithAs, PropsForFeatures, render } from '../../utils/render'\nimport { match } from '../../utils/match'\nimport { disposables } from '../../utils/disposables'\nimport { Keys } from '../keyboard'\nimport { Focus, calculateActiveIndex } from '../../utils/calculate-active-index'\nimport { resolvePropValue } from '../../utils/resolve-prop-value'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\n\nenum ListboxStates {\n  Open,\n  Closed,\n}\n\ntype ListboxOptionDataRef = MutableRefObject<{\n  textValue?: string\n  disabled: boolean\n  value: unknown\n}>\n\ninterface StateDefinition {\n  listboxState: ListboxStates\n  propsRef: MutableRefObject<{ value: unknown; onChange(value: unknown): void }>\n  labelRef: MutableRefObject<HTMLLabelElement | null>\n  buttonRef: MutableRefObject<HTMLButtonElement | null>\n  optionsRef: MutableRefObject<HTMLUListElement | null>\n  disabled: boolean\n  options: { id: string; dataRef: ListboxOptionDataRef }[]\n  searchQuery: string\n  activeOptionIndex: number | null\n}\n\nenum ActionTypes {\n  OpenListbox,\n  CloseListbox,\n\n  SetDisabled,\n\n  GoToOption,\n  Search,\n  ClearSearch,\n\n  RegisterOption,\n  UnregisterOption,\n}\n\ntype Actions =\n  | { type: ActionTypes.CloseListbox }\n  | { type: ActionTypes.OpenListbox }\n  | { type: ActionTypes.SetDisabled; disabled: boolean }\n  | { type: ActionTypes.GoToOption; focus: Focus.Specific; id: string }\n  | { type: ActionTypes.GoToOption; focus: Exclude<Focus, Focus.Specific> }\n  | { type: ActionTypes.Search; value: string }\n  | { type: ActionTypes.ClearSearch }\n  | { type: ActionTypes.RegisterOption; id: string; dataRef: ListboxOptionDataRef }\n  | { type: ActionTypes.UnregisterOption; id: string }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.CloseListbox](state) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n    return { ...state, activeOptionIndex: null, listboxState: ListboxStates.Closed }\n  },\n  [ActionTypes.OpenListbox](state) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Open) return state\n    return { ...state, listboxState: ListboxStates.Open }\n  },\n  [ActionTypes.SetDisabled](state, action) {\n    if (state.disabled === action.disabled) return state\n    return { ...state, disabled: action.disabled }\n  },\n  [ActionTypes.GoToOption](state, action) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n\n    let activeOptionIndex = calculateActiveIndex(action, {\n      resolveItems: () => state.options,\n      resolveActiveIndex: () => state.activeOptionIndex,\n      resolveId: item => item.id,\n      resolveDisabled: item => item.dataRef.current.disabled,\n    })\n\n    if (state.searchQuery === '' && state.activeOptionIndex === activeOptionIndex) return state\n    return { ...state, searchQuery: '', activeOptionIndex }\n  },\n  [ActionTypes.Search]: (state, action) => {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n\n    let searchQuery = state.searchQuery + action.value\n    let match = state.options.findIndex(\n      option =>\n        !option.dataRef.current.disabled &&\n        option.dataRef.current.textValue?.startsWith(searchQuery)\n    )\n\n    if (match === -1 || match === state.activeOptionIndex) return { ...state, searchQuery }\n    return { ...state, searchQuery, activeOptionIndex: match }\n  },\n  [ActionTypes.ClearSearch](state) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n    if (state.searchQuery === '') return state\n    return { ...state, searchQuery: '' }\n  },\n  [ActionTypes.RegisterOption]: (state, action) => ({\n    ...state,\n    options: [...state.options, { id: action.id, dataRef: action.dataRef }],\n  }),\n  [ActionTypes.UnregisterOption]: (state, action) => {\n    let nextOptions = state.options.slice()\n    let currentActiveOption =\n      state.activeOptionIndex !== null ? nextOptions[state.activeOptionIndex] : null\n\n    let idx = nextOptions.findIndex(a => a.id === action.id)\n\n    if (idx !== -1) nextOptions.splice(idx, 1)\n\n    return {\n      ...state,\n      options: nextOptions,\n      activeOptionIndex: (() => {\n        if (idx === state.activeOptionIndex) return null\n        if (currentActiveOption === null) return null\n\n        // If we removed the option before the actual active index, then it would be out of sync. To\n        // fix this, we will find the correct (new) index position.\n        return nextOptions.indexOf(currentActiveOption)\n      })(),\n    }\n  },\n}\n\nlet ListboxContext = createContext<[StateDefinition, Dispatch<Actions>] | null>(null)\nListboxContext.displayName = 'ListboxContext'\n\nfunction useListboxContext(component: string) {\n  let context = useContext(ListboxContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Listbox.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useListboxContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_LISTBOX_TAG = Fragment\ninterface ListboxRenderPropArg {\n  open: boolean\n  disabled: boolean\n}\n\nexport function Listbox<TTag extends ElementType = typeof DEFAULT_LISTBOX_TAG, TType = string>(\n  props: Props<TTag, ListboxRenderPropArg, 'value' | 'onChange'> & {\n    value: TType\n    onChange(value: TType): void\n    disabled?: boolean\n  }\n) {\n  let { value, onChange, disabled = false, ...passThroughProps } = props\n  let d = useDisposables()\n  let reducerBag = useReducer(stateReducer, {\n    listboxState: ListboxStates.Closed,\n    propsRef: { current: { value, onChange } },\n    labelRef: createRef(),\n    buttonRef: createRef(),\n    optionsRef: createRef(),\n    disabled,\n    options: [],\n    searchQuery: '',\n    activeOptionIndex: null,\n  } as StateDefinition)\n  let [{ listboxState, propsRef, optionsRef, buttonRef }, dispatch] = reducerBag\n\n  useIsoMorphicEffect(() => {\n    propsRef.current.value = value\n  }, [value, propsRef])\n  useIsoMorphicEffect(() => {\n    propsRef.current.onChange = onChange\n  }, [onChange, propsRef])\n  useIsoMorphicEffect(() => dispatch({ type: ActionTypes.SetDisabled, disabled }), [disabled])\n\n  useEffect(() => {\n    function handler(event: MouseEvent) {\n      let target = event.target as HTMLElement\n      let active = document.activeElement\n\n      if (listboxState !== ListboxStates.Open) return\n      if (buttonRef.current?.contains(target)) return\n\n      if (!optionsRef.current?.contains(target)) dispatch({ type: ActionTypes.CloseListbox })\n      if (active !== document.body && active?.contains(target)) return // Keep focus on newly clicked/focused element\n      if (!event.defaultPrevented) buttonRef.current?.focus({ preventScroll: true })\n    }\n\n    window.addEventListener('mousedown', handler)\n    return () => window.removeEventListener('mousedown', handler)\n  }, [listboxState, optionsRef, buttonRef, d, dispatch])\n\n  let propsBag = useMemo<ListboxRenderPropArg>(\n    () => ({ open: listboxState === ListboxStates.Open, disabled }),\n    [listboxState, disabled]\n  )\n\n  return (\n    <ListboxContext.Provider value={reducerBag}>\n      {render(passThroughProps, propsBag, DEFAULT_LISTBOX_TAG)}\n    </ListboxContext.Provider>\n  )\n}\n\n// ---\n\nlet DEFAULT_BUTTON_TAG = 'button' as const\ninterface ButtonRenderPropArg {\n  open: boolean\n  disabled: boolean\n}\ntype ButtonPropsWeControl =\n  | 'id'\n  | 'type'\n  | 'aria-haspopup'\n  | 'aria-controls'\n  | 'aria-expanded'\n  | 'aria-labelledby'\n  | 'disabled'\n  | 'onKeyDown'\n  | 'onClick'\n\nlet Button = forwardRefWithAs(function Button<TTag extends ElementType = typeof DEFAULT_BUTTON_TAG>(\n  props: Props<TTag, ButtonRenderPropArg, ButtonPropsWeControl>,\n  ref: Ref<HTMLButtonElement>\n) {\n  let [state, dispatch] = useListboxContext([Listbox.name, Button.name].join('.'))\n  let buttonRef = useSyncRefs(state.buttonRef, ref)\n\n  let id = `headlessui-listbox-button-${useId()}`\n  let d = useDisposables()\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n\n        case Keys.Space:\n        case Keys.Enter:\n        case Keys.ArrowDown:\n          event.preventDefault()\n          dispatch({ type: ActionTypes.OpenListbox })\n          d.nextFrame(() => {\n            state.optionsRef.current?.focus({ preventScroll: true })\n            if (!state.propsRef.current.value)\n              dispatch({ type: ActionTypes.GoToOption, focus: Focus.First })\n          })\n          break\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          dispatch({ type: ActionTypes.OpenListbox })\n          d.nextFrame(() => {\n            state.optionsRef.current?.focus({ preventScroll: true })\n            if (!state.propsRef.current.value)\n              dispatch({ type: ActionTypes.GoToOption, focus: Focus.Last })\n          })\n          break\n      }\n    },\n    [dispatch, state, d]\n  )\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      if (state.listboxState === ListboxStates.Open) {\n        dispatch({ type: ActionTypes.CloseListbox })\n        d.nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n      } else {\n        event.preventDefault()\n        dispatch({ type: ActionTypes.OpenListbox })\n        d.nextFrame(() => state.optionsRef.current?.focus({ preventScroll: true }))\n      }\n    },\n    [dispatch, d, state]\n  )\n\n  let labelledby = useComputed(() => {\n    if (!state.labelRef.current) return undefined\n    return [state.labelRef.current.id, id].join(' ')\n  }, [state.labelRef.current, id])\n\n  let propsBag = useMemo<ButtonRenderPropArg>(\n    () => ({ open: state.listboxState === ListboxStates.Open, disabled: state.disabled }),\n    [state]\n  )\n  let passthroughProps = props\n  let propsWeControl = {\n    ref: buttonRef,\n    id,\n    type: 'button',\n    'aria-haspopup': true,\n    'aria-controls': state.optionsRef.current?.id,\n    'aria-expanded': state.listboxState === ListboxStates.Open ? true : undefined,\n    'aria-labelledby': labelledby,\n    disabled: state.disabled,\n    onKeyDown: handleKeyDown,\n    onClick: handleClick,\n  }\n\n  return render({ ...passthroughProps, ...propsWeControl }, propsBag, DEFAULT_BUTTON_TAG)\n})\n\n// ---\n\nlet DEFAULT_LABEL_TAG = 'label' as const\ninterface LabelRenderPropArg {\n  open: boolean\n  disabled: boolean\n}\ntype LabelPropsWeControl = 'id' | 'ref' | 'onClick'\n\nfunction Label<TTag extends ElementType = typeof DEFAULT_LABEL_TAG>(\n  props: Props<TTag, LabelRenderPropArg, LabelPropsWeControl>\n) {\n  let [state] = useListboxContext([Listbox.name, Label.name].join('.'))\n  let id = `headlessui-listbox-label-${useId()}`\n\n  let handleClick = useCallback(() => state.buttonRef.current?.focus({ preventScroll: true }), [\n    state.buttonRef,\n  ])\n\n  let propsBag = useMemo<LabelRenderPropArg>(\n    () => ({ open: state.listboxState === ListboxStates.Open, disabled: state.disabled }),\n    [state]\n  )\n  let propsWeControl = { ref: state.labelRef, id, onClick: handleClick }\n  return render({ ...props, ...propsWeControl }, propsBag, DEFAULT_LABEL_TAG)\n}\n\n// ---\n\nlet DEFAULT_OPTIONS_TAG = 'ul' as const\ninterface OptionsRenderPropArg {\n  open: boolean\n}\ntype OptionsPropsWeControl =\n  | 'aria-activedescendant'\n  | 'aria-labelledby'\n  | 'id'\n  | 'onKeyDown'\n  | 'role'\n  | 'tabIndex'\n\nlet OptionsRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet Options = forwardRefWithAs(function Options<\n  TTag extends ElementType = typeof DEFAULT_OPTIONS_TAG\n>(\n  props: Props<TTag, OptionsRenderPropArg, OptionsPropsWeControl> &\n    PropsForFeatures<typeof OptionsRenderFeatures>,\n  ref: Ref<HTMLUListElement>\n) {\n  let [state, dispatch] = useListboxContext([Listbox.name, Options.name].join('.'))\n  let optionsRef = useSyncRefs(state.optionsRef, ref)\n\n  let id = `headlessui-listbox-options-${useId()}`\n  let d = useDisposables()\n  let searchDisposables = useDisposables()\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLUListElement>) => {\n      searchDisposables.dispose()\n\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n\n        // @ts-expect-error Fallthrough is expected here\n        case Keys.Space:\n          if (state.searchQuery !== '') {\n            event.preventDefault()\n            return dispatch({ type: ActionTypes.Search, value: event.key })\n          }\n        // When in type ahead mode, fallthrough\n        case Keys.Enter:\n          event.preventDefault()\n          dispatch({ type: ActionTypes.CloseListbox })\n          if (state.activeOptionIndex !== null) {\n            let { dataRef } = state.options[state.activeOptionIndex]\n            state.propsRef.current.onChange(dataRef.current.value)\n          }\n          disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n          break\n\n        case Keys.ArrowDown:\n          event.preventDefault()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Next })\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Previous })\n\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.First })\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Last })\n\n        case Keys.Escape:\n          event.preventDefault()\n          dispatch({ type: ActionTypes.CloseListbox })\n          return d.nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n\n        case Keys.Tab:\n          return event.preventDefault()\n\n        default:\n          if (event.key.length === 1) {\n            dispatch({ type: ActionTypes.Search, value: event.key })\n            searchDisposables.setTimeout(() => dispatch({ type: ActionTypes.ClearSearch }), 350)\n          }\n          break\n      }\n    },\n    [d, dispatch, searchDisposables, state]\n  )\n\n  let labelledby = useComputed(() => state.labelRef.current?.id ?? state.buttonRef.current?.id, [\n    state.labelRef.current,\n    state.buttonRef.current,\n  ])\n\n  let propsBag = useMemo<OptionsRenderPropArg>(\n    () => ({ open: state.listboxState === ListboxStates.Open }),\n    [state]\n  )\n  let propsWeControl = {\n    'aria-activedescendant':\n      state.activeOptionIndex === null ? undefined : state.options[state.activeOptionIndex]?.id,\n    'aria-labelledby': labelledby,\n    id,\n    onKeyDown: handleKeyDown,\n    role: 'listbox',\n    tabIndex: 0,\n    ref: optionsRef,\n  }\n  let passthroughProps = props\n\n  return render(\n    { ...passthroughProps, ...propsWeControl },\n    propsBag,\n    DEFAULT_OPTIONS_TAG,\n    OptionsRenderFeatures,\n    state.listboxState === ListboxStates.Open\n  )\n})\n\n// ---\n\nlet DEFAULT_OPTION_TAG = 'li' as const\ninterface OptionRenderPropArg {\n  active: boolean\n  selected: boolean\n  disabled: boolean\n}\ntype ListboxOptionPropsWeControl =\n  | 'id'\n  | 'role'\n  | 'tabIndex'\n  | 'aria-disabled'\n  | 'aria-selected'\n  | 'onPointerLeave'\n  | 'onMouseLeave'\n  | 'onPointerMove'\n  | 'onMouseMove'\n  | 'onFocus'\n\nfunction Option<\n  TTag extends ElementType = typeof DEFAULT_OPTION_TAG,\n  // TODO: One day we will be able to infer this type from the generic in Listbox itself.\n  // But today is not that day..\n  TType = Parameters<typeof Listbox>[0]['value']\n>(\n  props: Props<TTag, OptionRenderPropArg, ListboxOptionPropsWeControl | 'className' | 'value'> & {\n    disabled?: boolean\n    value: TType\n\n    // Special treatment, can either be a string or a function that resolves to a string\n    className?: ((bag: OptionRenderPropArg) => string) | string\n  }\n) {\n  let { disabled = false, value, className, ...passthroughProps } = props\n  let [state, dispatch] = useListboxContext([Listbox.name, Option.name].join('.'))\n  let id = `headlessui-listbox-option-${useId()}`\n  let active =\n    state.activeOptionIndex !== null ? state.options[state.activeOptionIndex].id === id : false\n  let selected = state.propsRef.current.value === value\n\n  let bag = useRef<ListboxOptionDataRef['current']>({ disabled, value })\n\n  useIsoMorphicEffect(() => {\n    bag.current.disabled = disabled\n  }, [bag, disabled])\n  useIsoMorphicEffect(() => {\n    bag.current.value = value\n  }, [bag, value])\n  useIsoMorphicEffect(() => {\n    bag.current.textValue = document.getElementById(id)?.textContent?.toLowerCase()\n  }, [bag, id])\n\n  let select = useCallback(() => state.propsRef.current.onChange(value), [state.propsRef, value])\n\n  useIsoMorphicEffect(() => {\n    dispatch({ type: ActionTypes.RegisterOption, id, dataRef: bag })\n    return () => dispatch({ type: ActionTypes.UnregisterOption, id })\n  }, [bag, id])\n\n  useIsoMorphicEffect(() => {\n    if (state.listboxState !== ListboxStates.Open) return\n    if (!selected) return\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Specific, id })\n    document.getElementById(id)?.focus?.()\n  }, [state.listboxState])\n\n  useIsoMorphicEffect(() => {\n    if (state.listboxState !== ListboxStates.Open) return\n    if (!active) return\n    let d = disposables()\n    d.nextFrame(() => document.getElementById(id)?.scrollIntoView?.({ block: 'nearest' }))\n    return d.dispose\n  }, [id, active, state.listboxState])\n\n  let handleClick = useCallback(\n    (event: { preventDefault: Function }) => {\n      if (disabled) return event.preventDefault()\n      select()\n      dispatch({ type: ActionTypes.CloseListbox })\n      disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n    },\n    [dispatch, state.buttonRef, disabled, select]\n  )\n\n  let handleFocus = useCallback(() => {\n    if (disabled) return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Nothing })\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Specific, id })\n  }, [disabled, id, dispatch])\n\n  let handleMove = useCallback(() => {\n    if (disabled) return\n    if (active) return\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Specific, id })\n  }, [disabled, active, id, dispatch])\n\n  let handleLeave = useCallback(() => {\n    if (disabled) return\n    if (!active) return\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Nothing })\n  }, [disabled, active, dispatch])\n\n  let propsBag = useMemo(() => ({ active, selected, disabled }), [active, selected, disabled])\n  let propsWeControl = {\n    id,\n    role: 'option',\n    tabIndex: -1,\n    className: resolvePropValue(className, propsBag),\n    'aria-disabled': disabled === true ? true : undefined,\n    'aria-selected': selected === true ? true : undefined,\n    onClick: handleClick,\n    onFocus: handleFocus,\n    onPointerMove: handleMove,\n    onMouseMove: handleMove,\n    onPointerLeave: handleLeave,\n    onMouseLeave: handleLeave,\n  }\n\n  return render({ ...passthroughProps, ...propsWeControl }, propsBag, DEFAULT_OPTION_TAG)\n}\n\n// ---\n\nListbox.Button = Button\nListbox.Label = Label\nListbox.Options = Options\nListbox.Option = Option\n","import { useState, useRef } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\n\nexport function useComputed<T>(cb: () => T, dependencies: React.DependencyList) {\n  let [value, setValue] = useState(cb)\n  let cbRef = useRef(cb)\n  useIsoMorphicEffect(() => {\n    cbRef.current = cb\n  }, [cb])\n  useIsoMorphicEffect(() => setValue(cbRef.current), [cbRef, setValue, ...dependencies])\n  return value\n}\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n  Fragment,\n\n  // Types\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../keyboard'\nimport { resolvePropValue } from '../../utils/resolve-prop-value'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\n\ninterface StateDefinition {\n  switch: HTMLButtonElement | null\n  label: HTMLLabelElement | null\n\n  setSwitch(element: HTMLButtonElement): void\n  setLabel(element: HTMLLabelElement): void\n}\n\nlet GroupContext = createContext<StateDefinition | null>(null)\nGroupContext.displayName = 'GroupContext'\n\nfunction useGroupContext(component: string) {\n  let context = useContext(GroupContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Switch.Group /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useGroupContext)\n    throw err\n  }\n  return context\n}\n\n// ---\n\nlet DEFAULT_GROUP_TAG = Fragment\n\nfunction Group<TTag extends ElementType = typeof DEFAULT_GROUP_TAG>(props: Props<TTag>) {\n  let [switchElement, setSwitchElement] = useState<HTMLButtonElement | null>(null)\n  let [labelElement, setLabelElement] = useState<HTMLLabelElement | null>(null)\n\n  let context = useMemo<StateDefinition>(\n    () => ({\n      switch: switchElement,\n      label: labelElement,\n      setSwitch: setSwitchElement,\n      setLabel: setLabelElement,\n    }),\n    [switchElement, setSwitchElement, labelElement, setLabelElement]\n  )\n\n  return (\n    <GroupContext.Provider value={context}>\n      {render(props, {}, DEFAULT_GROUP_TAG)}\n    </GroupContext.Provider>\n  )\n}\n\n// ---\n\nlet DEFAULT_SWITCH_TAG = 'button' as const\ninterface SwitchRenderPropArg {\n  checked: boolean\n}\ntype SwitchPropsWeControl =\n  | 'id'\n  | 'role'\n  | 'tabIndex'\n  | 'aria-checked'\n  | 'onClick'\n  | 'onKeyUp'\n  | 'onKeyPress'\n\nexport function Switch<TTag extends ElementType = typeof DEFAULT_SWITCH_TAG>(\n  props: Props<\n    TTag,\n    SwitchRenderPropArg,\n    SwitchPropsWeControl | 'checked' | 'onChange' | 'className'\n  > & {\n    checked: boolean\n    onChange(checked: boolean): void\n\n    // Special treatment, can either be a string or a function that resolves to a string\n    className?: ((bag: SwitchRenderPropArg) => string) | string\n  }\n) {\n  let { checked, onChange, className, ...passThroughProps } = props\n  let id = `headlessui-switch-${useId()}`\n  let groupContext = useContext(GroupContext)\n\n  let toggle = useCallback(() => onChange(!checked), [onChange, checked])\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      event.preventDefault()\n      toggle()\n    },\n    [toggle]\n  )\n  let handleKeyUp = useCallback(\n    (event: ReactKeyboardEvent<HTMLElement>) => {\n      if (event.key !== Keys.Tab) event.preventDefault()\n      if (event.key === Keys.Space) toggle()\n    },\n    [toggle]\n  )\n\n  // This is needed so that we can \"cancel\" the click event when we use the `Enter` key on a button.\n  let handleKeyPress = useCallback(\n    (event: ReactKeyboardEvent<HTMLElement>) => event.preventDefault(),\n    []\n  )\n\n  let propsBag = useMemo<SwitchRenderPropArg>(() => ({ checked }), [checked])\n  let propsWeControl = {\n    id,\n    ref: groupContext === null ? undefined : groupContext.setSwitch,\n    role: 'switch',\n    tabIndex: 0,\n    className: resolvePropValue(className, propsBag),\n    'aria-checked': checked,\n    'aria-labelledby': groupContext?.label?.id,\n    onClick: handleClick,\n    onKeyUp: handleKeyUp,\n    onKeyPress: handleKeyPress,\n  }\n\n  if (passThroughProps.as === 'button') {\n    Object.assign(propsWeControl, { type: 'button' })\n  }\n\n  return render({ ...passThroughProps, ...propsWeControl }, propsBag, DEFAULT_SWITCH_TAG)\n}\n\n// ---\n\nlet DEFAULT_LABEL_TAG = 'label' as const\ninterface LabelRenderPropArg {}\ntype LabelPropsWeControl = 'id' | 'ref' | 'onClick'\n\nfunction Label<TTag extends ElementType = typeof DEFAULT_LABEL_TAG>(\n  props: Props<TTag, LabelRenderPropArg, LabelPropsWeControl>\n) {\n  let state = useGroupContext([Switch.name, Label.name].join('.'))\n  let id = `headlessui-switch-label-${useId()}`\n\n  let handleClick = useCallback(() => {\n    if (!state.switch) return\n    state.switch.click()\n    state.switch.focus({ preventScroll: true })\n  }, [state.switch])\n\n  let propsWeControl = { ref: state.setLabel, id, onClick: handleClick }\n  return render({ ...props, ...propsWeControl }, {}, DEFAULT_LABEL_TAG)\n}\n\n// ---\n\nSwitch.Group = Group\nSwitch.Label = Label\n"],"names":["Features","RenderStrategy","Reason","useIsoMorphicEffect","window","useLayoutEffect","useEffect","state","serverHandoffComplete","id","generateId","useId","useState","setId","undefined","useIsInitialRender","initial","useRef","current","match","value","lookup","returnValue","args","error","Error","Object","keys","map","key","join","captureStackTrace","render","props","propsBag","defaultTag","features","visible","_render","featureFlags","None","Static","isStatic","rest","unmount","Unmount","Hidden","hidden","style","display","bag","tag","omit","as","Component","children","refName","passThroughProps","refRelatedProps","ref","resolvedChildren","Fragment","length","Array","isArray","err","isValidElement","cloneElement","assign","existingProps","functionsToMerge","clone","func","event","defaultPrevented","mergeEventFunctions","object","compact","createElement","forwardRefWithAs","component","forwardRef","keysToOmit","disposables","api","requestAnimationFrame","raf","add","cancelAnimationFrame","nextFrame","setTimeout","timer","clearTimeout","cb","push","dispose","splice","addClasses","node","classes","classList","removeClasses","remove","transition","base","from","to","done","d","_done","called","once","getComputedStyle","transitionDuration","transitionDelay","split","filter","Boolean","v","includes","parseFloat","sort","a","z","durationMs","Finished","Cancelled","waitForTransition","reason","useSplitClasses","useMemo","className","trim","TreeStates","TransitionContext","createContext","displayName","NestingContext","hasChildren","Visible","useNesting","doneRef","transitionableChildren","mounted","useIsMounted","unregister","useCallback","childId","strategy","idx","findIndex","register","child","find","noop","eventNames","ensureEventHooksExist","events","reduce","all","eventName","Keys","Focus","MenuStates","ActionTypes","TransitionChildRenderFeatures","TransitionChild","beforeEnter","afterEnter","beforeLeave","afterLeave","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","container","setState","context","useContext","useTransitionContext","show","appear","useParentNesting","isTransitioning","nesting","enterClasses","enterFromClasses","enterToClasses","leaveClasses","leaveFromClasses","leaveToClasses","eventsRef","useEvents","skip","React","Provider","Transition","passthroughProps","nestingBag","transitionBag","sharedProps","useDisposables","useSyncRefs","refs","forEach","calculateActiveIndex","action","resolvers","items","resolveItems","currentActiveIndex","resolveActiveIndex","activeIndex","nextActiveIndex","focus","First","item","resolveDisabled","Previous","slice","reverse","Next","Last","Specific","resolveId","Nothing","x","assertNever","resolvePropValue","property","isDisabledReactIssue7711","element","parent","parentElement","legend","HTMLFieldSetElement","HTMLLegendElement","isParentDisabled","getAttribute","previous","previousElementSibling","isFirstLegend","Child","reducers","CloseMenu","activeItemIndex","menuState","Closed","OpenMenu","Open","GoToItem","dataRef","disabled","searchQuery","Search","textValue","startsWith","ClearSearch","RegisterItem","UnregisterItem","nextItems","currentActiveItem","indexOf","MenuContext","useMenuContext","Menu","name","stateReducer","type","DEFAULT_MENU_TAG","reducerBag","useReducer","buttonRef","createRef","itemsRef","dispatch","handler","target","active","document","activeElement","_buttonRef$current","contains","_itemsRef$current","body","preventScroll","addEventListener","removeEventListener","open","ListboxStates","Button","handleKeyDown","Space","Enter","ArrowDown","preventDefault","ArrowUp","handleClick","currentTarget","_state$buttonRef$curr","_state$itemsRef$curre3","_state$itemsRef$curre4","onKeyDown","onClick","ItemsRenderFeatures","Items","searchDisposables","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","FILTER_REJECT","hasAttribute","FILTER_SKIP","FILTER_ACCEPT","nextNode","currentNode","setAttribute","getElementById","click","_state$buttonRef$curr2","Home","PageUp","End","PageDown","Escape","_state$buttonRef$curr3","Tab","_state$items$state$ac","_state$buttonRef$curr4","role","tabIndex","DEFAULT_ITEM_TAG","useComputed","dependencies","setValue","cbRef","Item","_document$getElementB2","scrollIntoView","block","_document$getElementB3","textContent","_document$getElementB4","toLowerCase","_state$buttonRef$curr5","handleFocus","handleMove","handleLeave","onFocus","onPointerMove","onMouseMove","onPointerLeave","onMouseLeave","CloseListbox","listboxState","activeOptionIndex","OpenListbox","SetDisabled","GoToOption","options","option","_option$dataRef$curre","RegisterOption","UnregisterOption","nextOptions","currentActiveOption","ListboxContext","useListboxContext","Listbox","DEFAULT_LISTBOX_TAG","onChange","propsRef","labelRef","optionsRef","_optionsRef$current","_state$optionsRef$cur3","labelledby","_state$optionsRef$cur4","OptionsRenderFeatures","Options","_state$labelRef$curre2","_state$options$state$","Label","Option","selected","_document$getElementB","select","_state$buttonRef$curr6","GroupContext","useGroupContext","DEFAULT_GROUP_TAG","Switch","checked","groupContext","toggle","handleKeyUp","handleKeyPress","propsWeControl","setSwitch","label","_groupContext$label","onKeyUp","onKeyPress","Group","switchElement","setSwitchElement","labelElement","setLabelElement","setLabel"],"mappings":"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"}